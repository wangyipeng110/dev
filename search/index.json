[{"content":"问题来源 项目需要用到对应的google地图获取经纬度\n接口地址: 点这里直接飞 添加页面 html 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 \u0026lt;div class=\u0026#34;form-group\u0026#34;\u0026gt; \u0026lt;label class=\u0026#34;control-label col-xs-12 col-sm-2\u0026#34;\u0026gt;{:__(\u0026#39;Store_address\u0026#39;)}:\u0026lt;/label\u0026gt; \u0026lt;div class=\u0026#34;col-xs-12 col-sm-8\u0026#34;\u0026gt; \u0026lt;input id=\u0026#34;c-store_address\u0026#34; class=\u0026#34;form-control\u0026#34; name=\u0026#34;row[store_address]\u0026#34; type=\u0026#34;text\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;input type=\u0026#34;button\u0026#34; id=\u0026#34;addressh\u0026#34; value=\u0026#34;获取地址坐标\u0026#34; \u0026gt; //注意修改的时候input 框里面添加对应的地址 value=\u0026#34;{$row.store_titles|htmlentities}\u0026#34; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;form-group\u0026#34;\u0026gt; \u0026lt;label class=\u0026#34;control-label col-xs-2 col-sm-2\u0026#34;\u0026gt;{:__(\u0026#39;Store_lat\u0026#39;)}:\u0026lt;/label\u0026gt; \u0026lt;div class=\u0026#34;col-xs-2 col-sm-2\u0026#34;\u0026gt; \u0026lt;input id=\u0026#34;c-pointlat\u0026#34; class=\u0026#34;form-control\u0026#34; name=\u0026#34;row[store_lat]\u0026#34; type=\u0026#34;text\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;label class=\u0026#34;control-label col-xs-2 col-sm-2\u0026#34;\u0026gt;{:__(\u0026#39;Store_lnt\u0026#39;)}:\u0026lt;/label\u0026gt; \u0026lt;div class=\u0026#34;col-xs-2 col-sm-2\u0026#34;\u0026gt; \u0026lt;input id=\u0026#34;c-pointlng\u0026#34; class=\u0026#34;form-control\u0026#34; name=\u0026#34;row[store_lnt]\u0026#34; type=\u0026#34;text\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; 添加页面js渲染 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 \u0026lt;script type=\u0026#34;text/javascript\u0026#34;\u0026gt; // 点击按钮，获取input里面的内容 // 1.找到按钮 找到input 2.点击事件 3.事件绑定 var oBtn = document.getElementById(\u0026#39;addressh\u0026#39;) var oIpt = document.getElementById(\u0026#39;c-store_address\u0026#39;) oBtn.onclick = function(){ // 弹出input的内容 alert(oIpt.value) address = $(\u0026#39;#c-store_address\u0026#39;).val(); $(document).ready(function() { // 发送 GET 请求 $.ajax({ url: \u0026#34;store/tankuang\u0026#34;, type: \u0026#39;GET\u0026#39;, // 请求方式 data: { \u0026#39;address\u0026#39;:address }, dataType: \u0026#39;json\u0026#39;, // 期望的响应数据类型 success: function(response) { // 在请求成功时调用的函数 console.log(response); // 打印响应数据 if (response.code == 1){ console.log( response.data.lat); console.log( response.data.lng); $(\u0026#39;#c-pointlat\u0026#39;).val(response.data.lat); $(\u0026#39;#c-pointlng\u0026#39;).val(response.data.lng); }else{ alert(response.msg +\u0026#34;错误码：\u0026#34;+response.data); } }, error: function(xhr, status, error) { // 在请求失败时调用的函数 console.error(\u0026#39;请求失败: \u0026#39; + status + \u0026#39;, 错误信息: \u0026#39; + error); } }); }); // oIpt.value = \u0026#34;改变了内容\u0026#34; } \u0026lt;/script\u0026gt; 控制器 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 public function tankuang(){ $address = $this -\u0026gt;request-\u0026gt;get(\u0026#39;address\u0026#39;); //传过来对应的地址 $geocode = $this-\u0026gt;geocode($address); if ($geocode[\u0026#39;status\u0026#39;] == \u0026#39;OK\u0026#39;) { $lat = $geocode[\u0026#39;results\u0026#39;][0][\u0026#39;geometry\u0026#39;][\u0026#39;location\u0026#39;][\u0026#39;lat\u0026#39;]; $lng = $geocode[\u0026#39;results\u0026#39;][0][\u0026#39;geometry\u0026#39;][\u0026#39;location\u0026#39;][\u0026#39;lng\u0026#39;]; $data = [ \u0026#39;lat\u0026#39; =\u0026gt;$lat, \u0026#39;lng\u0026#39;=\u0026gt;$lng ]; $this-\u0026gt;success(\u0026#39;\u0026#39;,\u0026#39;\u0026#39;,$data); } else { $this-\u0026gt;error(\u0026#39;坐标获取失败请选择正确得地址\u0026#39;,\u0026#39;\u0026#39;,$geocode[\u0026#39;status\u0026#39;]); } } public function geocode($address) { $apiKey = \u0026#39;你的key\u0026#39;; // 替换为你的Google Maps API密钥 $url = \u0026#39;https://maps.googleapis.com/maps/api/geocode/json?address=\u0026#39; . urlencode($address) . \u0026#39;\u0026amp;key=\u0026#39; . $apiKey; // 使用cURL $ch = curl_init(); curl_setopt($ch, CURLOPT_URL, $url); curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); $response = curl_exec($ch); curl_close($ch); // 使用file_get_contents // $response = file_get_contents($url); return json_decode($response, true); } 以上完美的解决了代码但是注意复制的时候要看好对应的控制器 ","date":"2024-11-25T15:24:50+08:00","permalink":"https://wangyipeng110.github.io/dev/p/fastadmin%E5%90%8E%E5%8F%B0%E8%B0%83%E7%94%A8google%E6%8E%A5%E5%8F%A3%E8%8E%B7%E5%8F%96%E7%BB%8F%E7%BA%AC%E5%BA%A6/","title":"Fastadmin后台调用google接口获取经纬度"},{"content":"fastadmin table 卡切换 在对应的控制器 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 public function _initialize() { parent::_initialize(); $this-\u0026gt;model = new \\app\\admin\\model\\Categorys; $this-\u0026gt;view-\u0026gt;assign(\u0026#34;statusList\u0026#34;, $this-\u0026gt;model-\u0026gt;getStatusList()); //这statuslist个是卡切换的 数据 是根据在model 中定义的 } //在模型定义 public function getStatusList() { $typeList = config(\u0026#39;site.biaoqian\u0026#39;); //这个是因为我在config 中定义的biaoqian 到时候可以在 系统配置的时候去添加对应的类型 foreach ($typeList as $k =\u0026gt; \u0026amp;$v) { $v = __($v); } return $typeList; } //或者自定义 public function getStatusList() { return [\u0026#39;1\u0026#39; =\u0026gt; __(\u0026#39;进行中\u0026#39;), \u0026#39;2\u0026#39; =\u0026gt; __(\u0026#39;暂停中\u0026#39;),\u0026#39;3\u0026#39; =\u0026gt; __(\u0026#39;已结束\u0026#39;)]; } 图片显示 然后在页面点击的时候发现没有反应 找半天在js文件中 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 table.bootstrapTable({ url: $.fn.bootstrapTable.defaults.extend.index_url, pk: \u0026#39;id\u0026#39;, sortName: \u0026#39;weigh\u0026#39;, pagination: false, commonSearch: true, //这个要开的 因为这个不开不传条件 search: false, columns: [ [ {checkbox: true}, {field: \u0026#39;id\u0026#39;, title: __(\u0026#39;Id\u0026#39;)}, {field: \u0026#39;type\u0026#39;, title: __(\u0026#39;Type\u0026#39;), operate: \u0026#39;=\u0026#39;, searchList: { \u0026#34;source\u0026#34;:__(\u0026#39;客户来源\u0026#39;), \u0026#39;stage\u0026#39;:__(\u0026#39;客户阶段\u0026#39;), \u0026#39;Industry\u0026#39;:__(\u0026#39;客户行业\u0026#39;), \u0026#39;ontract\u0026#39;:__(\u0026#39;合同类型\u0026#39;), \u0026#39;project\u0026#39;:__(\u0026#39;项目类型\u0026#39;), \u0026#39;System\u0026#39;:__(\u0026#39;系统名称\u0026#39;) },custom:{ \u0026#39;source\u0026#39;:\u0026#39;primary\u0026#39;, \u0026#39;stage\u0026#39;:\u0026#39;success\u0026#39;, \u0026#39;Industry\u0026#39;:\u0026#39;warning\u0026#39;, \u0026#39;ontract\u0026#39;:\u0026#39;danger\u0026#39;, \u0026#39;project\u0026#39;:\u0026#39;info\u0026#39;, \u0026#39;System\u0026#39;:\u0026#39;success\u0026#39;}, formatter: Table.api.formatter.label}, //在这里去添加对应的类型颜色然后值去搜索 {field: \u0026#39;name\u0026#39;, title: __(\u0026#39;Name\u0026#39;), operate: \u0026#39;LIKE\u0026#39;}, {field: \u0026#39;createtime\u0026#39;, title: __(\u0026#39;Createtime\u0026#39;), operate:\u0026#39;RANGE\u0026#39;, addclass:\u0026#39;datetimerange\u0026#39;, datetimeFormat:\u0026#34;YYYY-MM-DD\u0026#34;, formatter: Table.api.formatter.datetime}, // {field: \u0026#39;updatetime\u0026#39;, title: __(\u0026#39;Updatetime\u0026#39;), operate:\u0026#39;RANGE\u0026#39;, addclass:\u0026#39;datetimerange\u0026#39;, autocomplete:false, formatter: Table.api.formatter.datetime}, {field: \u0026#39;weigh\u0026#39;, title: __(\u0026#39;Weigh\u0026#39;), operate: false}, // {field: \u0026#39;status\u0026#39;, title: __(\u0026#39;Status\u0026#39;), searchList: {\u0026#34;30\u0026#34;:__(\u0026#39;Status 30\u0026#39;)}, formatter: Table.api.formatter.status}, {field: \u0026#39;operate\u0026#39;, title: __(\u0026#39;Operate\u0026#39;), table: table, events: Table.api.events.operate, formatter: Table.api.formatter.operate} ] ] }); 这个就是遇到的问题然后来写一下这个整个需求是要求我去做一个多标签的分类 我们先建表 1 2 3 4 5 6 7 8 9 10 11 CREATE TABLE `fa_categorys` ( `id` int(10) unsigned NOT NULL AUTO_INCREMENT, `type` varchar(30) DEFAULT \u0026#39;\u0026#39; COMMENT \u0026#39;栏目类型\u0026#39;, `name` varchar(30) DEFAULT \u0026#39;\u0026#39;, `createtime` bigint(16) DEFAULT NULL COMMENT \u0026#39;创建时间\u0026#39;, `updatetime` bigint(16) DEFAULT NULL COMMENT \u0026#39;更新时间\u0026#39;, `weigh` int(10) NOT NULL DEFAULT \u0026#39;0\u0026#39; COMMENT \u0026#39;权重\u0026#39;, `status` varchar(30) DEFAULT \u0026#39;\u0026#39; COMMENT \u0026#39;状态\u0026#39;, PRIMARY KEY (`id`) USING BTREE, KEY `weigh` (`weigh`,`id`) USING BTREE ) ENGINE=InnoDB AUTO_INCREMENT=41 DEFAULT CHARSET=utf8mb4 COMMENT=\u0026#39;分类表\u0026#39;; 然后生成对应的curd 我使用的可视化生成因为要那个权限 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 //控制器 public function _initialize() { parent::_initialize(); $this-\u0026gt;model = new \\app\\admin\\model\\Categorys; $this-\u0026gt;view-\u0026gt;assign(\u0026#34;statusList\u0026#34;, $this-\u0026gt;model-\u0026gt;getStatusList()); } //模型 public function getStatusList() { $typeList = config(\u0026#39;site.biaoqian\u0026#39;); //在系统配置 里面 对应的添加 array 类型 foreach ($typeList as $k =\u0026gt; \u0026amp;$v) { $v = __($v); } return $typeList; } 然后去到对应的页面 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 \u0026lt;!-- //添加页面 --\u0026gt; \u0026lt;form id=\u0026#34;add-form\u0026#34; class=\u0026#34;form-horizontal\u0026#34; role=\u0026#34;form\u0026#34; data-toggle=\u0026#34;validator\u0026#34; method=\u0026#34;POST\u0026#34; action=\u0026#34;\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;form-group\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;c-type\u0026#34; class=\u0026#34;control-label col-xs-12 col-sm-2\u0026#34;\u0026gt;{:__(\u0026#39;Type\u0026#39;)}:\u0026lt;/label\u0026gt; \u0026lt;div class=\u0026#34;col-xs-12 col-sm-8\u0026#34;\u0026gt; \u0026lt;select id=\u0026#34;c-type\u0026#34; data-rule=\u0026#34;required\u0026#34; class=\u0026#34;form-control selectpicker\u0026#34; name=\u0026#34;row[type]\u0026#34;\u0026gt; {foreach name=\u0026#34;statusList\u0026#34; item=\u0026#34;vo\u0026#34;} \u0026lt;option value=\u0026#34;{$key}\u0026#34; {in name=\u0026#34;key\u0026#34; value=\u0026#34;\u0026#34;}selected{/in}\u0026gt;{$vo}\u0026lt;/option\u0026gt; {/foreach} \u0026lt;/select\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;form-group\u0026#34;\u0026gt; \u0026lt;label class=\u0026#34;control-label col-xs-12 col-sm-2\u0026#34;\u0026gt;{:__(\u0026#39;Name\u0026#39;)}:\u0026lt;/label\u0026gt; \u0026lt;div class=\u0026#34;col-xs-12 col-sm-8\u0026#34;\u0026gt; \u0026lt;input id=\u0026#34;c-name\u0026#34; class=\u0026#34;form-control\u0026#34; name=\u0026#34;row[name]\u0026#34; type=\u0026#34;text\u0026#34; value=\u0026#34;\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;form-group\u0026#34;\u0026gt; \u0026lt;label class=\u0026#34;control-label col-xs-12 col-sm-2\u0026#34;\u0026gt;{:__(\u0026#39;Weigh\u0026#39;)}:\u0026lt;/label\u0026gt; \u0026lt;div class=\u0026#34;col-xs-12 col-sm-8\u0026#34;\u0026gt; \u0026lt;input id=\u0026#34;c-weigh\u0026#34; data-rule=\u0026#34;required\u0026#34; class=\u0026#34;form-control\u0026#34; name=\u0026#34;row[weigh]\u0026#34; type=\u0026#34;number\u0026#34; value=\u0026#34;0\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;!-- \u0026lt;div class=\u0026#34;form-group\u0026#34;\u0026gt;--\u0026gt; \u0026lt;!-- \u0026lt;label class=\u0026#34;control-label col-xs-12 col-sm-2\u0026#34;\u0026gt;{:__(\u0026#39;Status\u0026#39;)}:\u0026lt;/label\u0026gt;--\u0026gt; \u0026lt;!-- \u0026lt;div class=\u0026#34;col-xs-12 col-sm-8\u0026#34;\u0026gt;--\u0026gt; \u0026lt;!-- --\u0026gt; \u0026lt;!-- \u0026lt;div class=\u0026#34;radio\u0026#34;\u0026gt;--\u0026gt; \u0026lt;!-- {foreach name=\u0026#34;statusList\u0026#34; item=\u0026#34;vo\u0026#34;}--\u0026gt; \u0026lt;!-- \u0026lt;label for=\u0026#34;row[status]-{$key}\u0026#34;\u0026gt;\u0026lt;input id=\u0026#34;row[status]-{$key}\u0026#34; name=\u0026#34;row[status]\u0026#34; type=\u0026#34;radio\u0026#34; value=\u0026#34;{$key}\u0026#34; {in name=\u0026#34;key\u0026#34; value=\u0026#34;30\u0026#34;}checked{/in} /\u0026gt; {$vo}\u0026lt;/label\u0026gt; --\u0026gt; \u0026lt;!-- {/foreach}--\u0026gt; \u0026lt;!-- \u0026lt;/div\u0026gt;--\u0026gt; \u0026lt;!-- \u0026lt;/div\u0026gt;--\u0026gt; \u0026lt;!-- \u0026lt;/div\u0026gt;--\u0026gt; \u0026lt;div class=\u0026#34;form-group layer-footer\u0026#34;\u0026gt; \u0026lt;label class=\u0026#34;control-label col-xs-12 col-sm-2\u0026#34;\u0026gt;\u0026lt;/label\u0026gt; \u0026lt;div class=\u0026#34;col-xs-12 col-sm-8\u0026#34;\u0026gt; \u0026lt;button type=\u0026#34;submit\u0026#34; class=\u0026#34;btn btn-primary btn-embossed disabled\u0026#34;\u0026gt;{:__(\u0026#39;OK\u0026#39;)}\u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;!-- ———————————————————————————————————————————————————————————————————————————————————————————————————————————— --\u0026gt; \u0026lt;!-- //修改页面 --\u0026gt; \u0026lt;form id=\u0026#34;edit-form\u0026#34; class=\u0026#34;form-horizontal\u0026#34; role=\u0026#34;form\u0026#34; data-toggle=\u0026#34;validator\u0026#34; method=\u0026#34;POST\u0026#34; action=\u0026#34;\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;form-group\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;c-type\u0026#34; class=\u0026#34;control-label col-xs-12 col-sm-2\u0026#34;\u0026gt;{:__(\u0026#39;Type\u0026#39;)}:\u0026lt;/label\u0026gt; \u0026lt;div class=\u0026#34;col-xs-12 col-sm-8\u0026#34;\u0026gt; \u0026lt;select id=\u0026#34;c-type\u0026#34; data-rule=\u0026#34;required\u0026#34; class=\u0026#34;form-control selectpicker\u0026#34; name=\u0026#34;row[type]\u0026#34;\u0026gt; {foreach name=\u0026#34;statusList\u0026#34; item=\u0026#34;vo\u0026#34;} \u0026lt;option value=\u0026#34;{$key}\u0026#34; {in name=\u0026#34;key\u0026#34; value=\u0026#34;$row.type\u0026#34;}selected{/in}\u0026gt;{$vo}\u0026lt;/option\u0026gt; {/foreach} \u0026lt;/select\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;form-group\u0026#34;\u0026gt; \u0026lt;label class=\u0026#34;control-label col-xs-12 col-sm-2\u0026#34;\u0026gt;{:__(\u0026#39;Name\u0026#39;)}:\u0026lt;/label\u0026gt; \u0026lt;div class=\u0026#34;col-xs-12 col-sm-8\u0026#34;\u0026gt; \u0026lt;input id=\u0026#34;c-name\u0026#34; class=\u0026#34;form-control\u0026#34; name=\u0026#34;row[name]\u0026#34; type=\u0026#34;text\u0026#34; value=\u0026#34;{$row.name|htmlentities}\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;form-group\u0026#34;\u0026gt; \u0026lt;label class=\u0026#34;control-label col-xs-12 col-sm-2\u0026#34;\u0026gt;{:__(\u0026#39;Weigh\u0026#39;)}:\u0026lt;/label\u0026gt; \u0026lt;div class=\u0026#34;col-xs-12 col-sm-8\u0026#34;\u0026gt; \u0026lt;input id=\u0026#34;c-weigh\u0026#34; data-rule=\u0026#34;required\u0026#34; class=\u0026#34;form-control\u0026#34; name=\u0026#34;row[weigh]\u0026#34; type=\u0026#34;number\u0026#34; value=\u0026#34;{$row.weigh|htmlentities}\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;!-- \u0026lt;div class=\u0026#34;form-group\u0026#34;\u0026gt;--\u0026gt; \u0026lt;!-- \u0026lt;label class=\u0026#34;control-label col-xs-12 col-sm-2\u0026#34;\u0026gt;{:__(\u0026#39;Status\u0026#39;)}:\u0026lt;/label\u0026gt;--\u0026gt; \u0026lt;!-- \u0026lt;div class=\u0026#34;col-xs-12 col-sm-8\u0026#34;\u0026gt;--\u0026gt; \u0026lt;!-- --\u0026gt; \u0026lt;!-- \u0026lt;div class=\u0026#34;radio\u0026#34;\u0026gt;--\u0026gt; \u0026lt;!-- {foreach name=\u0026#34;statusList\u0026#34; item=\u0026#34;vo\u0026#34;}--\u0026gt; \u0026lt;!-- \u0026lt;label for=\u0026#34;row[status]-{$key}\u0026#34;\u0026gt;\u0026lt;input id=\u0026#34;row[status]-{$key}\u0026#34; name=\u0026#34;row[status]\u0026#34; type=\u0026#34;radio\u0026#34; value=\u0026#34;{$key}\u0026#34; {in name=\u0026#34;key\u0026#34; value=\u0026#34;$row.status\u0026#34;}checked{/in} /\u0026gt; {$vo}\u0026lt;/label\u0026gt; --\u0026gt; \u0026lt;!-- {/foreach}--\u0026gt; \u0026lt;!-- \u0026lt;/div\u0026gt;--\u0026gt; \u0026lt;!-- \u0026lt;/div\u0026gt;--\u0026gt; \u0026lt;!-- \u0026lt;/div\u0026gt;--\u0026gt; \u0026lt;div class=\u0026#34;form-group layer-footer\u0026#34;\u0026gt; \u0026lt;label class=\u0026#34;control-label col-xs-12 col-sm-2\u0026#34;\u0026gt;\u0026lt;/label\u0026gt; \u0026lt;div class=\u0026#34;col-xs-12 col-sm-8\u0026#34;\u0026gt; \u0026lt;button type=\u0026#34;submit\u0026#34; class=\u0026#34;btn btn-primary btn-embossed disabled\u0026#34;\u0026gt;{:__(\u0026#39;OK\u0026#39;)}\u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;!-- ———————————————————————————————————————————————————————————————————————————————————————————————————————————— --\u0026gt; \u0026lt;!-- index 页面 --\u0026gt; \u0026lt;div class=\u0026#34;panel panel-default panel-intro\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;panel-heading\u0026#34;\u0026gt; {:build_heading(null,FALSE)} \u0026lt;ul class=\u0026#34;nav nav-tabs\u0026#34; data-field=\u0026#34;type\u0026#34;\u0026gt; \u0026lt;li class=\u0026#34;{:$Think.get.type === null ? \u0026#39;active\u0026#39; : \u0026#39;\u0026#39;}\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#t-all\u0026#34; data-value=\u0026#34;\u0026#34; data-toggle=\u0026#34;tab\u0026#34;\u0026gt;{:__(\u0026#39;All\u0026#39;)}\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; {foreach name=\u0026#34;statusList\u0026#34; item=\u0026#34;vo\u0026#34;} \u0026lt;li class=\u0026#34;{:$Think.get.type === (string)$key ? \u0026#39;active\u0026#39; : \u0026#39;\u0026#39;}\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#t-{$key}\u0026#34; data-value=\u0026#34;{$key}\u0026#34; data-toggle=\u0026#34;tab\u0026#34;\u0026gt;{$vo}\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; {/foreach} \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;panel-body\u0026#34;\u0026gt; \u0026lt;div id=\u0026#34;myTabContent\u0026#34; class=\u0026#34;tab-content\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;tab-pane fade active in\u0026#34; id=\u0026#34;one\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;widget-body no-padding\u0026#34;\u0026gt; \u0026lt;div id=\u0026#34;toolbar\u0026#34; class=\u0026#34;toolbar\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;javascript:;\u0026#34; class=\u0026#34;btn btn-primary btn-refresh\u0026#34; title=\u0026#34;{:__(\u0026#39;Refresh\u0026#39;)}\u0026#34; \u0026gt;\u0026lt;i class=\u0026#34;fa fa-refresh\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;javascript:;\u0026#34; class=\u0026#34;btn btn-success btn-add {:$auth-\u0026gt;check(\u0026#39;categorys/add\u0026#39;)?\u0026#39;\u0026#39;:\u0026#39;hide\u0026#39;}\u0026#34; title=\u0026#34;{:__(\u0026#39;Add\u0026#39;)}\u0026#34; \u0026gt;\u0026lt;i class=\u0026#34;fa fa-plus\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; {:__(\u0026#39;Add\u0026#39;)}\u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;javascript:;\u0026#34; class=\u0026#34;btn btn-success btn-edit btn-disabled disabled {:$auth-\u0026gt;check(\u0026#39;categorys/edit\u0026#39;)?\u0026#39;\u0026#39;:\u0026#39;hide\u0026#39;}\u0026#34; title=\u0026#34;{:__(\u0026#39;Edit\u0026#39;)}\u0026#34; \u0026gt;\u0026lt;i class=\u0026#34;fa fa-pencil\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; {:__(\u0026#39;Edit\u0026#39;)}\u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;javascript:;\u0026#34; class=\u0026#34;btn btn-danger btn-del btn-disabled disabled {:$auth-\u0026gt;check(\u0026#39;categorys/del\u0026#39;)?\u0026#39;\u0026#39;:\u0026#39;hide\u0026#39;}\u0026#34; title=\u0026#34;{:__(\u0026#39;Delete\u0026#39;)}\u0026#34; \u0026gt;\u0026lt;i class=\u0026#34;fa fa-trash\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; {:__(\u0026#39;Delete\u0026#39;)}\u0026lt;/a\u0026gt; \u0026lt;!-- \u0026lt;div class=\u0026#34;dropdown btn-group {:$auth-\u0026gt;check(\u0026#39;categorys/multi\u0026#39;)?\u0026#39;\u0026#39;:\u0026#39;hide\u0026#39;}\u0026#34;\u0026gt;--\u0026gt; \u0026lt;!-- \u0026lt;a class=\u0026#34;btn btn-primary btn-more dropdown-toggle btn-disabled disabled\u0026#34; data-toggle=\u0026#34;dropdown\u0026#34;\u0026gt;\u0026lt;i class=\u0026#34;fa fa-cog\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; {:__(\u0026#39;More\u0026#39;)}\u0026lt;/a\u0026gt;--\u0026gt; \u0026lt;!-- \u0026lt;ul class=\u0026#34;dropdown-menu text-left\u0026#34; role=\u0026#34;menu\u0026#34;\u0026gt;--\u0026gt; \u0026lt;!-- {foreach name=\u0026#34;statusList\u0026#34; item=\u0026#34;vo\u0026#34;}--\u0026gt; \u0026lt;!-- \u0026lt;li\u0026gt;\u0026lt;a class=\u0026#34;btn btn-link btn-multi btn-disabled disabled\u0026#34; href=\u0026#34;javascript:\u0026#34; data-params=\u0026#34;type={$key}\u0026#34;\u0026gt;{:__(\u0026#39;Set status to \u0026#39; . $key)}\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;--\u0026gt; \u0026lt;!-- {/foreach}--\u0026gt; \u0026lt;!-- \u0026lt;/ul\u0026gt;--\u0026gt; \u0026lt;!-- \u0026lt;/div\u0026gt;--\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;table id=\u0026#34;table\u0026#34; class=\u0026#34;table table-striped table-bordered table-hover table-nowrap\u0026#34; data-operate-edit=\u0026#34;{:$auth-\u0026gt;check(\u0026#39;categorys/edit\u0026#39;)}\u0026#34; data-operate-del=\u0026#34;{:$auth-\u0026gt;check(\u0026#39;categorys/del\u0026#39;)}\u0026#34; width=\u0026#34;100%\u0026#34;\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; 对应的js页面 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 define([\u0026#39;jquery\u0026#39;, \u0026#39;bootstrap\u0026#39;, \u0026#39;backend\u0026#39;, \u0026#39;table\u0026#39;, \u0026#39;form\u0026#39;], function ($, undefined, Backend, Table, Form) { var Controller = { index: function () { // 初始化表格参数配置 Table.api.init({ extend: { index_url: \u0026#39;categorys/index\u0026#39; + location.search, add_url: \u0026#39;categorys/add\u0026#39;, edit_url: \u0026#39;categorys/edit\u0026#39;, del_url: \u0026#39;categorys/del\u0026#39;, multi_url: \u0026#39;categorys/multi\u0026#39;, import_url: \u0026#39;categorys/import\u0026#39;, table: \u0026#39;categorys\u0026#39;, } }); var table = $(\u0026#34;#table\u0026#34;); // 初始化表格 table.bootstrapTable({ url: $.fn.bootstrapTable.defaults.extend.index_url, pk: \u0026#39;id\u0026#39;, sortName: \u0026#39;weigh\u0026#39;, pagination: false, commonSearch: true, search: false, columns: [ [ {checkbox: true}, {field: \u0026#39;id\u0026#39;, title: __(\u0026#39;Id\u0026#39;)}, {field: \u0026#39;type\u0026#39;, title: __(\u0026#39;Type\u0026#39;), operate: \u0026#39;=\u0026#39;, searchList: { \u0026#34;source\u0026#34;:__(\u0026#39;客户来源\u0026#39;), \u0026#39;stage\u0026#39;:__(\u0026#39;客户阶段\u0026#39;), \u0026#39;Industry\u0026#39;:__(\u0026#39;客户行业\u0026#39;), \u0026#39;ontract\u0026#39;:__(\u0026#39;合同类型\u0026#39;), \u0026#39;project\u0026#39;:__(\u0026#39;项目类型\u0026#39;), \u0026#39;System\u0026#39;:__(\u0026#39;系统名称\u0026#39;) },custom:{ \u0026#39;source\u0026#39;:\u0026#39;primary\u0026#39;, \u0026#39;stage\u0026#39;:\u0026#39;success\u0026#39;, \u0026#39;Industry\u0026#39;:\u0026#39;warning\u0026#39;, \u0026#39;ontract\u0026#39;:\u0026#39;danger\u0026#39;, \u0026#39;project\u0026#39;:\u0026#39;info\u0026#39;, \u0026#39;System\u0026#39;:\u0026#39;success\u0026#39;}, formatter: Table.api.formatter.label}, {field: \u0026#39;name\u0026#39;, title: __(\u0026#39;Name\u0026#39;), operate: \u0026#39;LIKE\u0026#39;}, {field: \u0026#39;createtime\u0026#39;, title: __(\u0026#39;Createtime\u0026#39;), operate:\u0026#39;RANGE\u0026#39;, addclass:\u0026#39;datetimerange\u0026#39;, datetimeFormat:\u0026#34;YYYY-MM-DD\u0026#34;, formatter: Table.api.formatter.datetime}, // {field: \u0026#39;updatetime\u0026#39;, title: __(\u0026#39;Updatetime\u0026#39;), operate:\u0026#39;RANGE\u0026#39;, addclass:\u0026#39;datetimerange\u0026#39;, autocomplete:false, formatter: Table.api.formatter.datetime}, {field: \u0026#39;weigh\u0026#39;, title: __(\u0026#39;Weigh\u0026#39;), operate: false}, // {field: \u0026#39;status\u0026#39;, title: __(\u0026#39;Status\u0026#39;), searchList: {\u0026#34;30\u0026#34;:__(\u0026#39;Status 30\u0026#39;)}, formatter: Table.api.formatter.status}, {field: \u0026#39;operate\u0026#39;, title: __(\u0026#39;Operate\u0026#39;), table: table, events: Table.api.events.operate, formatter: Table.api.formatter.operate} ] ] }); // 为表格绑定事件 Table.api.bindevent(table); }, add: function () { Controller.api.bindevent(); }, edit: function () { Controller.api.bindevent(); }, api: { bindevent: function () { Form.api.bindevent($(\u0026#34;form[role=form]\u0026#34;)); } } }; return Controller; }); 下面这个是对应的效果 生成轮播图 1 2 3 4 5 6 7 8 9 10 11 12 13 14 CREATE TABLE `fa_banner` ( `id` int(20) unsigned NOT NULL AUTO_INCREMENT COMMENT \u0026#39;ID\u0026#39;, `title` varchar(50) DEFAULT NULL COMMENT \u0026#39;换灯标题\u0026#39;, `image` varchar(255) DEFAULT NULL COMMENT \u0026#39;换灯图片\u0026#39;, `site` enum(\u0026#39;1\u0026#39;,\u0026#39;2\u0026#39;) NOT NULL DEFAULT \u0026#39;1\u0026#39; COMMENT \u0026#39;位置:1=首页,2=任务大厅\u0026#39;, `jump_type_list` enum(\u0026#39;0\u0026#39;,\u0026#39;1\u0026#39;,\u0026#39;2\u0026#39;,\u0026#39;3\u0026#39;) DEFAULT NULL COMMENT \u0026#39;跳转方式:0=不跳转,1=内链,2=外链,3=自定义内容\u0026#39;, `content` text COMMENT \u0026#39;自定义内容\u0026#39;, `switch` tinyint(5) DEFAULT \u0026#39;1\u0026#39; COMMENT \u0026#39;开关:0=关,1=开\u0026#39;, `weigh` int(16) DEFAULT NULL COMMENT \u0026#39;权重\u0026#39;, `createtime` bigint(16) DEFAULT NULL COMMENT \u0026#39;创建时间\u0026#39;, `jump_url` varchar(255) DEFAULT NULL COMMENT \u0026#39;跳转链接\u0026#39;, PRIMARY KEY (`id`) USING BTREE, KEY `site_switch` (`site`,`switch`) USING BTREE ) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=utf8 COMMENT=\u0026#39;轮播图\u0026#39;; 然后生成对应的curd 用的是可视化 然后去到对应的页面u0026lt;!-- index.html --\u0026gt; \u0026lt;div class=\u0026#34;panel panel-default panel-intro\u0026#34;\u0026gt; {:build_heading()} \u0026lt;div class=\u0026#34;panel-body\u0026#34;\u0026gt; \u0026lt;div id=\u0026#34;myTabContent\u0026#34; class=\u0026#34;tab-content\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;tab-pane fade active in\u0026#34; id=\u0026#34;one\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;widget-body no-padding\u0026#34;\u0026gt; \u0026lt;div id=\u0026#34;toolbar\u0026#34; class=\u0026#34;toolbar\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;javascript:;\u0026#34; class=\u0026#34;btn btn-primary btn-refresh\u0026#34; title=\u0026#34;{:__(\u0026#39;Refresh\u0026#39;)}\u0026#34; \u0026gt;\u0026lt;i class=\u0026#34;fa fa-refresh\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;javascript:;\u0026#34; class=\u0026#34;btn btn-success btn-add {:$auth-\u0026gt;check(\u0026#39;banner/add\u0026#39;)?\u0026#39;\u0026#39;:\u0026#39;hide\u0026#39;}\u0026#34; title=\u0026#34;{:__(\u0026#39;Add\u0026#39;)}\u0026#34; \u0026gt;\u0026lt;i class=\u0026#34;fa fa-plus\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; {:__(\u0026#39;Add\u0026#39;)}\u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;javascript:;\u0026#34; class=\u0026#34;btn btn-success btn-edit btn-disabled disabled {:$auth-\u0026gt;check(\u0026#39;banner/edit\u0026#39;)?\u0026#39;\u0026#39;:\u0026#39;hide\u0026#39;}\u0026#34; title=\u0026#34;{:__(\u0026#39;Edit\u0026#39;)}\u0026#34; \u0026gt;\u0026lt;i class=\u0026#34;fa fa-pencil\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; {:__(\u0026#39;Edit\u0026#39;)}\u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;javascript:;\u0026#34; class=\u0026#34;btn btn-danger btn-del btn-disabled disabled {:$auth-\u0026gt;check(\u0026#39;banner/del\u0026#39;)?\u0026#39;\u0026#39;:\u0026#39;hide\u0026#39;}\u0026#34; title=\u0026#34;{:__(\u0026#39;Delete\u0026#39;)}\u0026#34; \u0026gt;\u0026lt;i class=\u0026#34;fa fa-trash\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; {:__(\u0026#39;Delete\u0026#39;)}\u0026lt;/a\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;table id=\u0026#34;table\u0026#34; class=\u0026#34;table table-striped table-bordered table-hover table-nowrap\u0026#34; data-operate-edit=\u0026#34;{:$auth-\u0026gt;check(\u0026#39;banner/edit\u0026#39;)}\u0026#34; data-operate-del=\u0026#34;{:$auth-\u0026gt;check(\u0026#39;banner/del\u0026#39;)}\u0026#34; width=\u0026#34;100%\u0026#34;\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;!-- edit.html --\u0026gt; \u0026lt;form id=\u0026#34;edit-form\u0026#34; class=\u0026#34;form-horizontal\u0026#34; role=\u0026#34;form\u0026#34; data-toggle=\u0026#34;validator\u0026#34; method=\u0026#34;POST\u0026#34; action=\u0026#34;\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;form-group\u0026#34;\u0026gt; \u0026lt;label class=\u0026#34;control-label col-xs-12 col-sm-2\u0026#34;\u0026gt;{:__(\u0026#39;Title\u0026#39;)}:\u0026lt;/label\u0026gt; \u0026lt;div class=\u0026#34;col-xs-12 col-sm-8\u0026#34;\u0026gt; \u0026lt;input id=\u0026#34;c-title\u0026#34; class=\u0026#34;form-control\u0026#34; name=\u0026#34;row[title]\u0026#34; type=\u0026#34;text\u0026#34; value=\u0026#34;{$row.title|htmlentities}\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;form-group\u0026#34;\u0026gt; \u0026lt;label class=\u0026#34;control-label col-xs-12 col-sm-2\u0026#34;\u0026gt;{:__(\u0026#39;Image\u0026#39;)}:\u0026lt;/label\u0026gt; \u0026lt;div class=\u0026#34;col-xs-12 col-sm-8\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;input-group\u0026#34;\u0026gt; \u0026lt;input id=\u0026#34;c-image\u0026#34; class=\u0026#34;form-control\u0026#34; size=\u0026#34;50\u0026#34; name=\u0026#34;row[image]\u0026#34; type=\u0026#34;text\u0026#34; value=\u0026#34;{$row.image|htmlentities}\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;input-group-addon no-border no-padding\u0026#34;\u0026gt; \u0026lt;span\u0026gt;\u0026lt;button type=\u0026#34;button\u0026#34; id=\u0026#34;faupload-image\u0026#34; class=\u0026#34;btn btn-danger faupload\u0026#34; data-input-id=\u0026#34;c-image\u0026#34; data-mimetype=\u0026#34;image/gif,image/jpeg,image/png,image/jpg,image/bmp,image/webp\u0026#34; data-multiple=\u0026#34;false\u0026#34; data-preview-id=\u0026#34;p-image\u0026#34;\u0026gt;\u0026lt;i class=\u0026#34;fa fa-upload\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; {:__(\u0026#39;Upload\u0026#39;)}\u0026lt;/button\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;span\u0026gt;\u0026lt;button type=\u0026#34;button\u0026#34; id=\u0026#34;fachoose-image\u0026#34; class=\u0026#34;btn btn-primary fachoose\u0026#34; data-input-id=\u0026#34;c-image\u0026#34; data-mimetype=\u0026#34;image/*\u0026#34; data-multiple=\u0026#34;false\u0026#34;\u0026gt;\u0026lt;i class=\u0026#34;fa fa-list\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; {:__(\u0026#39;Choose\u0026#39;)}\u0026lt;/button\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;span class=\u0026#34;msg-box n-right\u0026#34; for=\u0026#34;c-image\u0026#34;\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;ul class=\u0026#34;row list-inline faupload-preview\u0026#34; id=\u0026#34;p-image\u0026#34;\u0026gt;\u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;form-group\u0026#34;\u0026gt; \u0026lt;label class=\u0026#34;control-label col-xs-12 col-sm-2\u0026#34;\u0026gt;{:__(\u0026#39;Site\u0026#39;)}:\u0026lt;/label\u0026gt; \u0026lt;div class=\u0026#34;col-xs-12 col-sm-8\u0026#34;\u0026gt; \u0026lt;select id=\u0026#34;c-site\u0026#34; data-rule=\u0026#34;required\u0026#34; class=\u0026#34;form-control selectpicker\u0026#34; name=\u0026#34;row[site]\u0026#34;\u0026gt; {foreach name=\u0026#34;siteList\u0026#34; item=\u0026#34;vo\u0026#34;} \u0026lt;option value=\u0026#34;{$key}\u0026#34; {in name=\u0026#34;key\u0026#34; value=\u0026#34;$row.site\u0026#34;}selected{/in}\u0026gt;{$vo}\u0026lt;/option\u0026gt; {/foreach} \u0026lt;/select\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;form-group\u0026#34;\u0026gt; \u0026lt;label class=\u0026#34;control-label col-xs-12 col-sm-2\u0026#34;\u0026gt;{:__(\u0026#39;Jump_type_list\u0026#39;)}:\u0026lt;/label\u0026gt; \u0026lt;div class=\u0026#34;col-xs-12 col-sm-8\u0026#34;\u0026gt; \u0026lt;select id=\u0026#34;c-jump_type_list\u0026#34; class=\u0026#34;form-control selectpicker\u0026#34; name=\u0026#34;row[jump_type_list]\u0026#34;\u0026gt; {foreach name=\u0026#34;jumpTypeListList\u0026#34; item=\u0026#34;vo\u0026#34;} \u0026lt;option value=\u0026#34;{$key}\u0026#34; {in name=\u0026#34;key\u0026#34; value=\u0026#34;$row.jump_type_list\u0026#34;}selected{/in}\u0026gt;{$vo}\u0026lt;/option\u0026gt; {/foreach} \u0026lt;/select\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;form-group\u0026#34;\u0026gt; \u0026lt;label class=\u0026#34;control-label col-xs-12 col-sm-2\u0026#34;\u0026gt;{:__(\u0026#39;Content\u0026#39;)}:\u0026lt;/label\u0026gt; \u0026lt;div class=\u0026#34;col-xs-12 col-sm-8\u0026#34;\u0026gt; \u0026lt;textarea id=\u0026#34;c-content\u0026#34; class=\u0026#34;form-control editor\u0026#34; rows=\u0026#34;5\u0026#34; name=\u0026#34;row[content]\u0026#34; cols=\u0026#34;50\u0026#34;\u0026gt;{$row.content|htmlentities}\u0026lt;/textarea\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;form-group\u0026#34;\u0026gt; \u0026lt;label class=\u0026#34;control-label col-xs-12 col-sm-2\u0026#34;\u0026gt;{:__(\u0026#39;Switch\u0026#39;)}:\u0026lt;/label\u0026gt; \u0026lt;div class=\u0026#34;col-xs-12 col-sm-8\u0026#34;\u0026gt; \u0026lt;select id=\u0026#34;c-switch\u0026#34; class=\u0026#34;form-control selectpicker\u0026#34; name=\u0026#34;row[switch]\u0026#34;\u0026gt; {foreach name=\u0026#34;switchList\u0026#34; item=\u0026#34;vo\u0026#34;} \u0026lt;option value=\u0026#34;{$key}\u0026#34; {in name=\u0026#34;key\u0026#34; value=\u0026#34;$row.switch\u0026#34;}selected{/in}\u0026gt;{$vo}\u0026lt;/option\u0026gt; {/foreach} \u0026lt;/select\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;form-group\u0026#34;\u0026gt; \u0026lt;label class=\u0026#34;control-label col-xs-12 col-sm-2\u0026#34;\u0026gt;{:__(\u0026#39;Weigh\u0026#39;)}:\u0026lt;/label\u0026gt; \u0026lt;div class=\u0026#34;col-xs-12 col-sm-8\u0026#34;\u0026gt; \u0026lt;input id=\u0026#34;c-weigh\u0026#34; class=\u0026#34;form-control\u0026#34; name=\u0026#34;row[weigh]\u0026#34; type=\u0026#34;number\u0026#34; value=\u0026#34;{$row.weigh|htmlentities}\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;form-group\u0026#34;\u0026gt; \u0026lt;label class=\u0026#34;control-label col-xs-12 col-sm-2\u0026#34;\u0026gt;{:__(\u0026#39;Jump_url\u0026#39;)}:\u0026lt;/label\u0026gt; \u0026lt;div class=\u0026#34;col-xs-12 col-sm-8\u0026#34;\u0026gt; \u0026lt;input id=\u0026#34;c-jump_url\u0026#34; class=\u0026#34;form-control\u0026#34; name=\u0026#34;row[jump_url]\u0026#34; type=\u0026#34;text\u0026#34; value=\u0026#34;{$row.jump_url|htmlentities}\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;form-group layer-footer\u0026#34;\u0026gt; \u0026lt;label class=\u0026#34;control-label col-xs-12 col-sm-2\u0026#34;\u0026gt;\u0026lt;/label\u0026gt; \u0026lt;div class=\u0026#34;col-xs-12 col-sm-8\u0026#34;\u0026gt; \u0026lt;button type=\u0026#34;submit\u0026#34; class=\u0026#34;btn btn-primary btn-embossed disabled\u0026#34;\u0026gt;{:__(\u0026#39;OK\u0026#39;)}\u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;!-- add.html --\u0026gt; \u0026lt;form id=\u0026#34;add-form\u0026#34; class=\u0026#34;form-horizontal\u0026#34; role=\u0026#34;form\u0026#34; data-toggle=\u0026#34;validator\u0026#34; method=\u0026#34;POST\u0026#34; action=\u0026#34;\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;form-group\u0026#34;\u0026gt; \u0026lt;label class=\u0026#34;control-label col-xs-12 col-sm-2\u0026#34;\u0026gt;{:__(\u0026#39;Title\u0026#39;)}:\u0026lt;/label\u0026gt; \u0026lt;div class=\u0026#34;col-xs-12 col-sm-8\u0026#34;\u0026gt; \u0026lt;input id=\u0026#34;c-title\u0026#34; class=\u0026#34;form-control\u0026#34; name=\u0026#34;row[title]\u0026#34; type=\u0026#34;text\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;form-group\u0026#34;\u0026gt; \u0026lt;label class=\u0026#34;control-label col-xs-12 col-sm-2\u0026#34;\u0026gt;{:__(\u0026#39;Image\u0026#39;)}:\u0026lt;/label\u0026gt; \u0026lt;div class=\u0026#34;col-xs-12 col-sm-8\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;input-group\u0026#34;\u0026gt; \u0026lt;input id=\u0026#34;c-image\u0026#34; class=\u0026#34;form-control\u0026#34; size=\u0026#34;50\u0026#34; name=\u0026#34;row[image]\u0026#34; type=\u0026#34;text\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;input-group-addon no-border no-padding\u0026#34;\u0026gt; \u0026lt;span\u0026gt;\u0026lt;button type=\u0026#34;button\u0026#34; id=\u0026#34;faupload-image\u0026#34; class=\u0026#34;btn btn-danger faupload\u0026#34; data-input-id=\u0026#34;c-image\u0026#34; data-mimetype=\u0026#34;image/gif,image/jpeg,image/png,image/jpg,image/bmp,image/webp\u0026#34; data-multiple=\u0026#34;false\u0026#34; data-preview-id=\u0026#34;p-image\u0026#34;\u0026gt;\u0026lt;i class=\u0026#34;fa fa-upload\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; {:__(\u0026#39;Upload\u0026#39;)}\u0026lt;/button\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;span\u0026gt;\u0026lt;button type=\u0026#34;button\u0026#34; id=\u0026#34;fachoose-image\u0026#34; class=\u0026#34;btn btn-primary fachoose\u0026#34; data-input-id=\u0026#34;c-image\u0026#34; data-mimetype=\u0026#34;image/*\u0026#34; data-multiple=\u0026#34;false\u0026#34;\u0026gt;\u0026lt;i class=\u0026#34;fa fa-list\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; {:__(\u0026#39;Choose\u0026#39;)}\u0026lt;/button\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;span class=\u0026#34;msg-box n-right\u0026#34; for=\u0026#34;c-image\u0026#34;\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;ul class=\u0026#34;row list-inline faupload-preview\u0026#34; id=\u0026#34;p-image\u0026#34;\u0026gt;\u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;form-group\u0026#34;\u0026gt; \u0026lt;label class=\u0026#34;control-label col-xs-12 col-sm-2\u0026#34;\u0026gt;{:__(\u0026#39;Site\u0026#39;)}:\u0026lt;/label\u0026gt; \u0026lt;div class=\u0026#34;col-xs-12 col-sm-8\u0026#34;\u0026gt; \u0026lt;select id=\u0026#34;c-site\u0026#34; data-rule=\u0026#34;required\u0026#34; class=\u0026#34;form-control selectpicker\u0026#34; name=\u0026#34;row[site]\u0026#34;\u0026gt; {foreach name=\u0026#34;siteList\u0026#34; item=\u0026#34;vo\u0026#34;} \u0026lt;option value=\u0026#34;{$key}\u0026#34; {in name=\u0026#34;key\u0026#34; value=\u0026#34;1\u0026#34;}selected{/in}\u0026gt;{$vo}\u0026lt;/option\u0026gt; {/foreach} \u0026lt;/select\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;form-group\u0026#34;\u0026gt; \u0026lt;label class=\u0026#34;control-label col-xs-12 col-sm-2\u0026#34;\u0026gt;{:__(\u0026#39;Jump_type_list\u0026#39;)}:\u0026lt;/label\u0026gt; \u0026lt;div class=\u0026#34;col-xs-12 col-sm-8\u0026#34;\u0026gt; \u0026lt;select id=\u0026#34;c-jump_type_list\u0026#34; class=\u0026#34;form-control selectpicker\u0026#34; name=\u0026#34;row[jump_type_list]\u0026#34;\u0026gt; {foreach name=\u0026#34;jumpTypeListList\u0026#34; item=\u0026#34;vo\u0026#34;} \u0026lt;option value=\u0026#34;{$key}\u0026#34; {in name=\u0026#34;key\u0026#34; value=\u0026#34;\u0026#34;}selected{/in}\u0026gt;{$vo}\u0026lt;/option\u0026gt; {/foreach} \u0026lt;/select\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;form-group\u0026#34;\u0026gt; \u0026lt;label class=\u0026#34;control-label col-xs-12 col-sm-2\u0026#34;\u0026gt;{:__(\u0026#39;Content\u0026#39;)}:\u0026lt;/label\u0026gt; \u0026lt;div class=\u0026#34;col-xs-12 col-sm-8\u0026#34;\u0026gt; \u0026lt;textarea id=\u0026#34;c-content\u0026#34; class=\u0026#34;form-control editor\u0026#34; rows=\u0026#34;5\u0026#34; name=\u0026#34;row[content]\u0026#34; cols=\u0026#34;50\u0026#34;\u0026gt;\u0026lt;/textarea\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;form-group\u0026#34;\u0026gt; \u0026lt;label class=\u0026#34;control-label col-xs-12 col-sm-2\u0026#34;\u0026gt;{:__(\u0026#39;Switch\u0026#39;)}:\u0026lt;/label\u0026gt; \u0026lt;div class=\u0026#34;col-xs-12 col-sm-8\u0026#34;\u0026gt; \u0026lt;select id=\u0026#34;c-switch\u0026#34; class=\u0026#34;form-control selectpicker\u0026#34; name=\u0026#34;row[switch]\u0026#34;\u0026gt; {foreach name=\u0026#34;switchList\u0026#34; item=\u0026#34;vo\u0026#34;} \u0026lt;option value=\u0026#34;{$key}\u0026#34; {in name=\u0026#34;key\u0026#34; value=\u0026#34;1\u0026#34;}selected{/in}\u0026gt;{$vo}\u0026lt;/option\u0026gt; {/foreach} \u0026lt;/select\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;form-group\u0026#34;\u0026gt; \u0026lt;label class=\u0026#34;control-label col-xs-12 col-sm-2\u0026#34;\u0026gt;{:__(\u0026#39;Weigh\u0026#39;)}:\u0026lt;/label\u0026gt; \u0026lt;div class=\u0026#34;col-xs-12 col-sm-8\u0026#34;\u0026gt; \u0026lt;input id=\u0026#34;c-weigh\u0026#34; class=\u0026#34;form-control\u0026#34; name=\u0026#34;row[weigh]\u0026#34; type=\u0026#34;number\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;form-group\u0026#34;\u0026gt; \u0026lt;label class=\u0026#34;control-label col-xs-12 col-sm-2\u0026#34;\u0026gt;{:__(\u0026#39;Jump_url\u0026#39;)}:\u0026lt;/label\u0026gt; \u0026lt;div class=\u0026#34;col-xs-12 col-sm-8\u0026#34;\u0026gt; \u0026lt;input id=\u0026#34;c-jump_url\u0026#34; class=\u0026#34;form-control\u0026#34; name=\u0026#34;row[jump_url]\u0026#34; type=\u0026#34;text\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;form-group layer-footer\u0026#34;\u0026gt; \u0026lt;label class=\u0026#34;control-label col-xs-12 col-sm-2\u0026#34;\u0026gt;\u0026lt;/label\u0026gt; \u0026lt;div class=\u0026#34;col-xs-12 col-sm-8\u0026#34;\u0026gt; \u0026lt;button type=\u0026#34;submit\u0026#34; class=\u0026#34;btn btn-primary btn-embossed disabled\u0026#34;\u0026gt;{:__(\u0026#39;OK\u0026#39;)}\u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/form\u0026gt; 对应的js页面 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 define([\u0026#39;jquery\u0026#39;, \u0026#39;bootstrap\u0026#39;, \u0026#39;backend\u0026#39;, \u0026#39;table\u0026#39;, \u0026#39;form\u0026#39;], function ($, undefined, Backend, Table, Form) { var Controller = { index: function () { // 初始化表格参数配置 Table.api.init({ extend: { index_url: \u0026#39;banner/index\u0026#39; + location.search, add_url: \u0026#39;banner/add\u0026#39;, edit_url: \u0026#39;banner/edit\u0026#39;, del_url: \u0026#39;banner/del\u0026#39;, multi_url: \u0026#39;banner/multi\u0026#39;, import_url: \u0026#39;banner/import\u0026#39;, table: \u0026#39;banner\u0026#39;, } }); var table = $(\u0026#34;#table\u0026#34;); // 初始化表格 table.bootstrapTable({ url: $.fn.bootstrapTable.defaults.extend.index_url, pk: \u0026#39;id\u0026#39;, sortName: \u0026#39;weigh\u0026#39;, fixedColumns: true, fixedRightNumber: 1, columns: [ [ {checkbox: true}, {field: \u0026#39;id\u0026#39;, title: __(\u0026#39;Id\u0026#39;)}, {field: \u0026#39;title\u0026#39;, title: __(\u0026#39;Title\u0026#39;), operate: \u0026#39;LIKE\u0026#39;}, {field: \u0026#39;image\u0026#39;, title: __(\u0026#39;Image\u0026#39;), operate: false, events: Table.api.events.image, formatter: Table.api.formatter.image}, {field: \u0026#39;site\u0026#39;, title: __(\u0026#39;Site\u0026#39;), searchList: {\u0026#34;1\u0026#34;:__(\u0026#39;Site 1\u0026#39;),\u0026#34;2\u0026#34;:__(\u0026#39;Site 2\u0026#39;)}, formatter: Table.api.formatter.normal}, {field: \u0026#39;jump_type_list\u0026#39;, title: __(\u0026#39;Jump_type_list\u0026#39;), searchList: {\u0026#34;0\u0026#34;:__(\u0026#39;Jump_type_list 0\u0026#39;),\u0026#34;1\u0026#34;:__(\u0026#39;Jump_type_list 1\u0026#39;),\u0026#34;2\u0026#34;:__(\u0026#39;Jump_type_list 2\u0026#39;),\u0026#34;3\u0026#34;:__(\u0026#39;Jump_type_list 3\u0026#39;)}, formatter: Table.api.formatter.normal}, {field: \u0026#39;switch\u0026#39;, title: __(\u0026#39;Switch\u0026#39;), searchList: {\u0026#34;0\u0026#34;:__(\u0026#39;Switch 0\u0026#39;),\u0026#34;1\u0026#34;:__(\u0026#39;Switch 1\u0026#39;)}, table: table, formatter: Table.api.formatter.toggle}, {field: \u0026#39;weigh\u0026#39;, title: __(\u0026#39;Weigh\u0026#39;), operate: false}, {field: \u0026#39;createtime\u0026#39;, title: __(\u0026#39;Createtime\u0026#39;), operate:\u0026#39;RANGE\u0026#39;, addclass:\u0026#39;datetimerange\u0026#39;, autocomplete:false, formatter: Table.api.formatter.datetime}, {field: \u0026#39;jump_url\u0026#39;, title: __(\u0026#39;Jump_url\u0026#39;), operate: \u0026#39;LIKE\u0026#39;, formatter: Table.api.formatter.url}, {field: \u0026#39;operate\u0026#39;, title: __(\u0026#39;Operate\u0026#39;), table: table, events: Table.api.events.operate, formatter: Table.api.formatter.operate} ] ] }); // 为表格绑定事件 Table.api.bindevent(table); }, add: function () { Controller.api.bindevent(); }, edit: function () { Controller.api.bindevent(); }, api: { bindevent: function () { Form.api.bindevent($(\u0026#34;form[role=form]\u0026#34;)); } } }; return Controller; }); ","date":"2024-11-25T15:24:50+08:00","permalink":"https://wangyipeng110.github.io/dev/p/fastadmin%E5%AD%A6%E4%B9%A0/","title":"fastadmin学习"},{"content":"问题来源 就是有时候总是在index.js 得时候忘记一些功能\n头部的一些样式开关 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 table.bootstrapTable({ pk: \u0026#39;contracts_id\u0026#39;, //主键 sortName: \u0026#39;contracts_id\u0026#39;, //这里可以就是添加多个条件 例如: contracts_id desc,contracts_createtime asc search: false, //隐藏或者开启那个页面的搜索 showToggle: false, //隐藏切换 页面搜索后面的那个切换 showColumns: false, //隐藏列 切换后面的那个显示列表 dblClickToEdit: false, //双击编辑 就是点列表的时候可以双击编辑 //这俩是固定页面的 fixedColumns: true, // 固定列代码 fixedRightNumber: 1, // 固定右侧第一列 fixedNumber:1, // 固定左侧10列 //手动刷新 showRefresh: false, //这个是 刷新 是右边的刷新不是左面的 //下面俩都打开才能显示多搜索 showSearch: false, //隐藏多 搜索 commonSearch: false, //隐藏搜索 searchFormVisible: false, //是否 进页面的时候就显示搜索多 visible: false, //隐藏 showExport: false, //隐藏导出 }) 搜索的时候找寻对应的字段 这个默认是id 但是我们数据库一般都是 goods_id 所以就用到了在对应的控制器 1 protected $searchFields = \u0026#39;goods_id,country_name\u0026#39;; //搜索对应的字段 加这个 对于排序一般都是多个条件进行的排序 1 2 3 4 5 table.bootstrapTable({ url: $.fn.bootstrapTable.defaults.extend.index_url, pk: \u0026#39;kefu_id\u0026#39;, sortName: \u0026#39;kefu_id\u0026#39; //排序的话就在这里加对应的字段就可以了 例如: kefu_id desc,kefu_creatime asc 如何在操作页面添加对应的按钮呢 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 { field: \u0026#39;operate\u0026#39;, title: __(\u0026#39;Operate\u0026#39;), table: table, events: Table.api.events.operate, buttons: [ { name: \u0026#34;enrolluser\u0026#34;, text: \u0026#34;库存列表\u0026#34;,//按钮名称 classname: \u0026#39;btn btn-xs btn-primary btn-dialog\u0026#39;, // classname: \u0026#39;btn b // tn-xs btn-success btn-magic btn-dialog\u0026#39;, icon: \u0026#39;fa fa-magic\u0026#39;, url: \u0026#39;ku/index?ids={goods_id}\u0026#39;,//指向控制器对应方法 visible: function (row) { //返回true时按钮显示,返回false隐藏 //这里可以直接获取对应的条件显示 return true; // return row.contracts_audit_status == 0 \u0026amp;\u0026amp; row.admin == 1; //这个admin 是用户的id 后台用户的 权限可以使用 我是控制器传过来的 }, extend: \u0026#39;data-area=\\\u0026#39;[\u0026#34;80%\u0026#34;, \u0026#34;80%\u0026#34;]\\\u0026#39;\u0026#39;, //这个是弹窗的宽度 }, ], //刷新弹框提示 // refresh: true, // 确保设置为 true // success: function (data, ret) { // if (ret.code === 1) { // Layer.msg(ret.msg); // // 刷新表格 // $(\u0026#34;#table\u0026#34;).bootstrapTable(\u0026#39;refresh\u0026#39;); // return false; // } // }, // error: function (data, ret) { // Layer.alert(ret.msg); // return false; // } formatter: Table.api.formatter.operate //这个是格式化 } 后端关联表表获取的值进行对应的搜索 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 var table = $(\u0026#34;#table\u0026#34;); table.on(\u0026#39;post-common-search.bs.table\u0026#39;, function (event, table) { var form = $(\u0026#34;form\u0026#34;, table.$commonsearch); //这个是获取的控制器对应的name $(\u0026#34;input[name=\u0026#39;types.goods_type_name\u0026#39;]\u0026#34;, form).addClass(\u0026#34;selectpage\u0026#34;).data(\u0026#34;source\u0026#34;, \u0026#34;Type/index\u0026#34;).data(\u0026#34;primaryKey\u0026#34;, \u0026#34;goods_type_name\u0026#34;).data(\u0026#34;field\u0026#34;, \u0026#34;goods_type_name\u0026#34;).data(\u0026#34;orderBy\u0026#34;, \u0026#34;goods_quanzhong desc\u0026#34;).data(\u0026#34;pageSize\u0026#34;,5); //普通获取的基本上 //这个是获取的id 然后 id 又加了条件 类型是 system 的值 $(\u0026#34;input[name=\u0026#39;customers_source_id\u0026#39;]\u0026#34;, form).addClass(\u0026#34;selectpage\u0026#34;).data(\u0026#34;source\u0026#34;, \u0026#34;Categorys/index\u0026#34;).data(\u0026#34;primaryKey\u0026#34;, \u0026#34;id\u0026#34;).data(\u0026#34;field\u0026#34;, \u0026#34;name\u0026#34;).data(\u0026#34;orderBy\u0026#34;, \u0026#34;id desc\u0026#34;).data(\u0026#34;pageSize\u0026#34;,5); $(\u0026#34;input[name=\u0026#39;customers_recommendation_system_id\u0026#39;]\u0026#34;, form).data(\u0026#34;params\u0026#34;, function (obj) { return {custom: {type: \u0026#39;System\u0026#39;}}; }); Form.events.cxselect(form); Form.events.selectpage(form); }); 对应的在table 标里面的值 columns 里面 搜索对应的 types.goods_type_name 记住 operate 是打开搜索的开关 1 2 3 4 5 6 7 8 columns: [ [ {checkbox: true}, {field: \u0026#39;goods_id\u0026#39;, title: __(\u0026#39;Goods_id\u0026#39;),operate: false,}, {field: \u0026#39;types.goods_type_name\u0026#39;, title: __(\u0026#39;Goods_type\u0026#39;),operate: \u0026#39;LIKE %...%\u0026#39;, placeholder: \u0026#39;模糊搜索，*表示任意字符\u0026#39;}, //operate 是搜索的值 可以是 = \u0026gt; \u0026lt; 等等 {field: \u0026#39;goods_name\u0026#39;, title: __(\u0026#39;Goods_name\u0026#39;), operate: \u0026#39;LIKE\u0026#39;, table: table, class: \u0026#39;autocontent\u0026#39;, formatter: Table.api.formatter.content}, ] ] 对应的在 页面条件上面加小三角如图 1 {field: \u0026#39;conint\u0026#39;, title: __(\u0026#39;收藏量\u0026#39;),sortable: true}, //注意这个 sortable 打开即可 添加对应的开关的时候 1 2 {field: \u0026#39;ishotshell\u0026#39;, title: __(\u0026#39;热卖优品\u0026#39;), searchList: {\u0026#34;1\u0026#34;: __(\u0026#39;Yes\u0026#39;), \u0026#34;0\u0026#34;: __(\u0026#39;No\u0026#39;)}, formatter: Table.api.formatter.toggle}, //toggle这个就是开关按钮 会自动调取muit 方法可以自行f12 查看 在对应的控制器里面 1 2 3 4 5 6 7 8 9 10 */ protected $model = null; protected $multiFields=\u0026#34;goods_id,ishotshell\u0026#34;; //加上渲染的值 public function _initialize() { parent::_initialize(); $this-\u0026gt;model = new \\app\\admin\\model\\Selfgoods; } 获取那个主页面传过来的ids 1 2 3 4 5 6 7 8 9 10 11 Table.api.init({ extend: { index_url: \u0026#39;follow/index\u0026#39; + location.search, add_url: \u0026#39;follow/add/ids/\u0026#39;+$(\u0026#34;#ids\u0026#34;).html(), //这个是获取的ids edit_url: \u0026#39;follow/edit\u0026#39;, // del_url: \u0026#39;follow/del\u0026#39;, multi_url: \u0026#39;follow/multi\u0026#39;, import_url: \u0026#39;follow/import\u0026#39;, table: \u0026#39;follow\u0026#39;, } }); js的按钮时间修改 1 2 3 4 {field: \u0026#39;follow_createtime\u0026#39;, title: __(\u0026#39;Follow_createtime\u0026#39;), operate:\u0026#39;RANGE\u0026#39;, addclass:\u0026#39;datetimerange\u0026#39;, datetimeFormat:\u0026#34;YYYY-MM-DD\u0026#34;, formatter: Table.api.formatter.datetime}, //时间格式化 {field: \u0026#39;type\u0026#39;, title: __(\u0026#39;Type\u0026#39;), operate: \u0026#39;=\u0026#39;, searchList: {\u0026#34;source\u0026#34;:__(\u0026#39;客户来源\u0026#39;),\u0026#39;stage\u0026#39;:__(\u0026#39;客户阶段\u0026#39;),\u0026#39;Industry\u0026#39;:__(\u0026#39;客户行业\u0026#39;),\u0026#39;ontract\u0026#39;:__(\u0026#39;合同类型\u0026#39;),\u0026#39;project\u0026#39;:__(\u0026#39;项目类型\u0026#39;),\u0026#39;System\u0026#39;:__(\u0026#39;系统名称\u0026#39;)}, custom:{\u0026#39;source\u0026#39;:\u0026#39;primary\u0026#39;,\u0026#39;stage\u0026#39;:\u0026#39;success\u0026#39;,\u0026#39;Industry\u0026#39;:\u0026#39;warning\u0026#39;,\u0026#39;ontract\u0026#39;:\u0026#39;danger\u0026#39;,\u0026#39;project\u0026#39;:\u0026#39;info\u0026#39;,\u0026#39;System\u0026#39;:\u0026#39;success\u0026#39;},formatter: Table.api.formatter.label}, //按钮颜色 控制器 获取后台用户id 1 2 3 4 5 6 7 8 //获取后台用户 角色id $rous = $this-\u0026gt;auth-\u0026gt;getGroupIds(); if ($rous[0] != 1) { $this-\u0026gt;error(__(\u0026#39;没有权利修改\u0026#39;)); } //获取后台用户id $uid = $this-\u0026gt;auth-\u0026gt;id; where 多条件in or 1 2 3 4 5 6 7 8 9 10 //合同未交付数 // 这里是负责人 技术员 签订人 $contracts_count = Db::table(\u0026#39;fa_contracts\u0026#39;) -\u0026gt;where(\u0026#39;delivery_status\u0026#39;, \u0026#39;\u0026lt;\u0026gt;\u0026#39;, 5) -\u0026gt;where(function ($query) use ($admin_id) { $query-\u0026gt;where(\u0026#39;contracts_manager_id\u0026#39;, $admin_id) -\u0026gt;whereOr(\u0026#39;contracts_signer_id\u0026#39;, $admin_id) -\u0026gt;whereIn(\u0026#39;contracts_technician_id\u0026#39;, [$admin_id]); }) -\u0026gt;whereTime(\u0026#39;createtime\u0026#39;, $tian) -\u0026gt;count(); 上面就是一些我了解的东西 ","date":"2024-11-25T15:24:50+08:00","permalink":"https://wangyipeng110.github.io/dev/p/fastadmin%E6%A0%B7%E5%BC%8Findex.js%E9%A1%B5%E9%9D%A2/","title":"Fastadmin样式index.js页面"},{"content":"问题来源 开发中遇到在添加修改页面的时候多级菜单的分类添加\n添加（修改）页面 1 2 3 4 5 6 7 8 9 10 11 12 13 \u0026lt;div class=\u0026#34;form-group\u0026#34;\u0026gt; \u0026lt;label class=\u0026#34;control-label col-xs-12 col-sm-2\u0026#34;\u0026gt;{:__(\u0026#39;商品类别\u0026#39;)}:\u0026lt;/label\u0026gt; \u0026lt;div class=\u0026#34;col-xs-12 col-sm-8\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;form-inline\u0026#34; data-toggle=\u0026#34;cxselect\u0026#34; data-selects=\u0026#34;first,second\u0026#34;\u0026gt; \u0026lt;select class=\u0026#34;first form-control\u0026#34; name=\u0026#34;row[store_city]\u0026#34; data-url=\u0026#34;city/qdtype1\u0026#34; \u0026gt; \u0026lt;option value=\u0026#34;{$row.store_city|htmlentities}\u0026#34; selected=\u0026#34;\u0026#34;\u0026gt;\u0026lt;/option\u0026gt; \u0026lt;/select\u0026gt; \u0026lt;select class=\u0026#34;second form-control\u0026#34; name=\u0026#34;row[store_quan]\u0026#34; data-url=\u0026#34;city/qdtype2\u0026#34; data-query-name=\u0026#34;pid\u0026#34;\u0026gt; \u0026lt;option value=\u0026#34;{$row.store_quan|htmlentities}\u0026#34; selected=\u0026#34;\u0026#34;\u0026gt;\u0026lt;/option\u0026gt; \u0026lt;/select\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; 上面图中 data-url=\u0026quot;\u0026quot; 跳转对应的控制器方法获取对应的值 data-query-name=\u0026ldquo;pid\u0026rdquo; 传值获取 pid 为值 控制器 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 public function qdtype1(){ $list= $this-\u0026gt;model-\u0026gt;where(\u0026#39;remark\u0026#39;,1)-\u0026gt;select(); foreach ($list as $k=\u0026gt;$v){ $v[\u0026#39;name\u0026#39;] = $v[\u0026#39;title\u0026#39;]; $v[\u0026#39;value\u0026#39;] =$v[\u0026#39;id\u0026#39;]; } $this-\u0026gt;success(\u0026#39;\u0026#39;,\u0026#39;\u0026#39;,$list); } public function qdtype2(){ $pid = $this -\u0026gt;request-\u0026gt;get(\u0026#39;pid\u0026#39;); $list= $this-\u0026gt;model-\u0026gt;where(\u0026#39;remark\u0026#39;,2)-\u0026gt;where(\u0026#39;pid\u0026#39;,$pid)-\u0026gt;select(); foreach ($list as $k=\u0026gt;$v){ $v[\u0026#39;name\u0026#39;] = $v[\u0026#39;title\u0026#39;]; $v[\u0026#39;value\u0026#39;] =$v[\u0026#39;id\u0026#39;]; } $this-\u0026gt;success(\u0026#39;\u0026#39;,\u0026#39;\u0026#39;,$list); } 对应的方法获取值渲染 name 是渲染的值 value 是渲染的id ","date":"2024-11-25T15:24:50+08:00","permalink":"https://wangyipeng110.github.io/dev/p/fastadmin%E6%B7%BB%E5%8A%A0%E8%8E%B7%E5%8F%96%E5%A4%9A%E7%BA%A7%E5%88%86%E7%B1%BB/","title":"Fastadmin添加获取多级分类"},{"content":"问题来源 今天开发添加页面的时候 获取到别的控制器进行的页面渲染到我当前的控制器的按钮列表里面 但是导入的时候获取不到对应的数据的ids\n1 2 3 4 5 6 7 8 9 10 Table.api.init({ extend: { index_url: \u0026#39;ku/index\u0026#39; + location.search + $(\u0026#34;#ids\u0026#34;).html(), add_url: \u0026#39;ku/add\u0026#39;, edit_url: \u0026#39;ku/edit\u0026#39;, del_url: \u0026#39;ku/del\u0026#39;, multi_url: \u0026#39;ku/multi\u0026#39;, import_url: \u0026#39;ku/import/ids/\u0026#39;+ $(\u0026#34;#ids\u0026#34;).html(), //在这里就可以获取到对应的ids了 table: \u0026#39;ku\u0026#39;, }}) 控制器 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 public function import(){ $id = input(\u0026#39;ids\u0026#39;); //获取对应的ids $file = $this-\u0026gt;request-\u0026gt;request(\u0026#39;file\u0026#39;); //\u0026#39;file\u0026#39;为文件字段名 $data = $this-\u0026gt;readFile($file); //下面代码就是导入的哦 $rs = []; foreach ($data as \u0026amp;$row) { $rs[] = [ \u0026#39;ku_name\u0026#39; =\u0026gt; $row[\u0026#39;123\u0026#39;], \u0026#39;ku_ma\u0026#39; =\u0026gt; $row[\u0026#39;456 \u0026#39;ku_goods\u0026#39; =\u0026gt; $id, \u0026#39;ku_static\u0026#39;=\u0026gt;0 ]; } $this-\u0026gt;model-\u0026gt;saveAll($rs); $this-\u0026gt;success(\u0026#39;导入成功\u0026#39;); } 调用方法 这个导入自定义导入的因为这自带的导入数据处理麻烦就用的这个 代码放在 application/admin/library/traits/Backend.php最下面就好了 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 protected function readFile($file){ if (!$file) { $this-\u0026gt;error(__(\u0026#39;Parameter %s can not be empty\u0026#39;, \u0026#39;file\u0026#39;)); } $filePath = ROOT_PATH . DS . \u0026#39;public\u0026#39; . DS . $file; if (!is_file($filePath)) { $this-\u0026gt;error(__(\u0026#39;No results were found\u0026#39;)); } //实例化reader $ext = pathinfo($filePath, PATHINFO_EXTENSION); if (!in_array($ext, [\u0026#39;csv\u0026#39;, \u0026#39;xls\u0026#39;, \u0026#39;xlsx\u0026#39;])) { $this-\u0026gt;error(__(\u0026#39;Unknown data format\u0026#39;)); } if ($ext === \u0026#39;csv\u0026#39;) { $file = fopen($filePath, \u0026#39;r\u0026#39;); $filePath = tempnam(sys_get_temp_dir(), \u0026#39;import_csv\u0026#39;); $fp = fopen($filePath, \u0026#34;w\u0026#34;); $n = 0; while ($line = fgets($file)) { $line = rtrim($line, \u0026#34;\\n\\r\\0\u0026#34;); $encoding = mb_detect_encoding($line, [\u0026#39;utf-8\u0026#39;, \u0026#39;gbk\u0026#39;, \u0026#39;latin1\u0026#39;, \u0026#39;big5\u0026#39;]); if ($encoding != \u0026#39;utf-8\u0026#39;) { $line = mb_convert_encoding($line, \u0026#39;utf-8\u0026#39;, $encoding); } if ($n == 0 || preg_match(\u0026#39;/^\u0026#34;.*\u0026#34;$/\u0026#39;, $line)) { fwrite($fp, $line . \u0026#34;\\n\u0026#34;); } else { fwrite($fp, \u0026#39;\u0026#34;\u0026#39; . str_replace([\u0026#39;\u0026#34;\u0026#39;, \u0026#39;,\u0026#39;], [\u0026#39;\u0026#34;\u0026#34;\u0026#39;, \u0026#39;\u0026#34;,\u0026#34;\u0026#39;], $line) . \u0026#34;\\\u0026#34;\\n\u0026#34;); } $n++; } fclose($file) || fclose($fp); $reader = new Csv(); } elseif ($ext === \u0026#39;xls\u0026#39;) { $reader = new Xls(); } else { $reader = new Xlsx(); } //加载文件 try { if (!$PHPExcel = $reader-\u0026gt;load($filePath)) { $this-\u0026gt;error(__(\u0026#39;Unknown data format\u0026#39;)); } $currentSheet = $PHPExcel-\u0026gt;getSheet(0); //读取文件中的第一个工作表 $allColumn = $currentSheet-\u0026gt;getHighestDataColumn(); //取得最大的列号 $allRow = $currentSheet-\u0026gt;getHighestRow(); //取得一共有多少行 $maxColumnNumber = Coordinate::columnIndexFromString($allColumn); //读取第一行字段名 $fields = []; for ($currentRow = 1; $currentRow \u0026lt;= 1; $currentRow++) { for ($currentColumn = 1; $currentColumn \u0026lt;= $maxColumnNumber; $currentColumn++) { $val = $currentSheet-\u0026gt;getCellByColumnAndRow($currentColumn, $currentRow)-\u0026gt;getValue(); $fields[] = $val; } } //读取行数据 $row = []; for ($currentRow = 2; $currentRow \u0026lt;= $allRow; $currentRow++) { $values = []; for ($currentColumn = 1; $currentColumn \u0026lt;= $maxColumnNumber; $currentColumn++) { $val = $currentSheet-\u0026gt;getCellByColumnAndRow($currentColumn, $currentRow)-\u0026gt;getValue(); $values[] = is_null($val) ? \u0026#39;\u0026#39; : $val; } $row[] = array_combine($fields, $values); } } catch (Exception $exception) { $this-\u0026gt;error($exception-\u0026gt;getMessage()); } if (!$row) { $this-\u0026gt;error(__(\u0026#39;No rows were updated\u0026#39;)); } return $row; } 这样就完成了 在当前控制器调用模块到 别的控制器但是获取当前控制器ids 的操作了 ","date":"2024-11-25T15:24:50+08:00","permalink":"https://wangyipeng110.github.io/dev/p/fastadmin%E9%A1%B5%E9%9D%A2%E8%B7%B3%E8%BD%AC%E5%88%B0%E5%88%AB%E7%9A%84%E6%8E%A7%E5%88%B6%E5%99%A8%E8%8E%B7%E5%8F%96%E5%BD%93%E5%89%8D%E6%95%B0%E6%8D%AE%E7%9A%84ids/","title":"Fastadmin页面跳转到别的控制器获取当前数据的ids"},{"content":"已经安装好了 1 2 3 4 5 6 7 8 在目录dev下 cmd hugo server -D 本地 hugo -D 生成静态文件 在public 里面 git add . git commit -m \u0026#39;chuan\u0026#39; git push -u origin main 提交到服务器 ","date":"2024-11-25T15:24:50+08:00","permalink":"https://wangyipeng110.github.io/dev/p/hugo%E6%90%AD%E5%BB%BA/","title":"hugo搭建"},{"content":"在navicat 里面查询 sql 下面这句话查看是否开启慢日志 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 SHOW VARIABLES LIKE \u0026#39;%slow_query_log%\u0026#39;; //查看是否开启日志 默认off 未开启 set global slow_query_log=1; //开启慢日志 ------------------------------------------------------- show global variables like \u0026#39;long_query_time\u0026#39;; //查看多少秒 set global long_query_time=3; //这四个都是都一样得 设置时间 SHOW VARIABLES LIKE \u0026#39;long_query_time%\u0026#39;; //查看慢日志设定得值 单位是秒 set long_query_time =1; //设定慢查询得时间 不得大于1 秒 单位是秒随便改秒 --------------------------------------------------------------------------- show global status like \u0026#39;%Slow_queries%\u0026#39;; //查看有多少sql 不在上面设置得时间里面 //如果需要永久生效，就必须修改配置文件my.cnf，[mysqld]下增加或修改参数如下： slow_query_log=1 slow_query_log_file=/var/lib/mysql/atguigu-slow.log long_query_time=3 log_output=FILE 下面图片是对应得信息 然后在对应得mysql 使用 mysqldumpslow 工具是慢查询自带的分析慢查询工具，一般只要安装了mysql，就会有该工具。 然后在宝塔输入命令好家伙报错 mysqldumpslow -s t -t 3 /www/server/data/mysql-slow.log -bash: mysqldumpslow: command not found\n这是说明找不到这个文件 所以 覆盖下 执行命令 ln -sf /www/server/mysql/bin/mysqldumpslow /usr/bin; // 因为我的文件在这里\n然后查看一下把 输入命令 mysqldumpslow \u0026ndash;help 然后打开 msql 输入命令 SHOW VARIABLES LIKE \u0026lsquo;%slow_query_log%\u0026rsquo;; 查看对应得目录用于下面 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 mysqldumpslow -s c -t 10 /www/server/data/mysql-slow.log //取出使用最多的10条慢查询 mysqldumpslow -s t -t 3 /var/log/mysql/mysql-slow.log //取出查询时间最慢的3条慢查询 mysqldumpslow -s t -t 10 -g “left join” /var/log/mysql/mysql-slow.log //得到按照时间排序的前10条里面含有左连接的查询语句 mysqldumpslow -s r -t 10 -g \u0026#39;left join\u0026#39; /var/log/mysql/mysql-slow.log //按照扫描行数最多的前10条语句 mysqldumpslow -s t -t 10 /var/log/mysql/mysql-slow.log //按查询总时间排序，显示前10条查询信息 mysqldumpslow -s c -t 20 /var/log/mysql/mysql-slow.log //查询次数排序，显示前20条查询信息 其中，-s t 表示按查询总时间排序，-s c表示按查询次数排序，-t 10表示显示前10条查询信息。 s:是表示按何种方式排序 c:访问次数 l:锁定时间 r:返回记录 t:查询时间 al:平均锁定时间 ar:平均返回记录数 at:平均查询时间 t:即为返回前面多少条的数据 g:后边搭配一个正则匹配模式，大小写不敏感的 这是一些解释对应得 然后开始找到对应得数据进行优化 通过分析和统计MySQL慢查询日志文件，可以找出不同查询语句的执行时间和执行次数等指标，以便进一步优化和调整查询语句的性能和执行效率。优化的方法通常包括以下几个方面： 添加或修改表索引，以提高查询速度。 优化SQL查询语句，使用优化的SQL语句可以使查询性能得到提升。 在 MySQL 中，添加或修改表索引是数据库优化中的重要步骤。索引有助于加速查询操作，尤其是在大数据量表中。下面我将介绍如何 添加 或 修改 MySQL 表的索引。\n添加索引 1.1. 单列索引 单列索引是指为单一列创建索引，适用于查询中经常使用某一列作为条件的情况。 语法：\nsql 复制代码 CREATE INDEX index_name ON table_name(column_name); 示例：为 xinli_user 表中的 user_id 列创建索引：\nsql 复制代码\n1 CREATE INDEX idx_user_id ON xinli_user(user_id); 1.2. 复合索引 复合索引是指为多个列一起创建索引，适用于查询中经常涉及多个列的情况。复合索引能够显著提高针对多个列的查询效率。\n语法：\nsql 复制代码\n1 CREATE INDEX index_name ON table_name(column1, column2, ...); 示例：为 xinli_user 表中的 user_id 和 email 两个列创建复合索引： sql 复制代码\n1 CREATE INDEX idx_user_email ON xinli_user(user_id, email); 1.3. 唯一索引 唯一索引确保列中的所有值都是唯一的，适用于需要确保数据唯一性的列，例如主键或唯一键。\n语法：\nsql 复制代码\n1 CREATE UNIQUE INDEX index_name ON table_name(column_name); 示例：为 xinli_user 表中的 email 列创建唯一索引：\nsql 复制代码\n1 CREATE UNIQUE INDEX idx_unique_email ON xinli_user(email); 1.4. 全文索引 全文索引用于文本搜索，适用于对大量文本数据进行快速搜索的情况。通常用于 TEXT 类型列。 语法： sql 复制代码\n1 CREATE FULLTEXT INDEX index_name ON table_name(column_name); 示例：为 xinli_user 表中的 description 列创建全文索引： sql 复制代码\n1 CREATE FULLTEXT INDEX idx_fulltext_description ON xinli_user(description); 修改索引 在 MySQL 中，不能直接修改已存在的索引。要修改索引，通常需要先删除原有索引，然后重新创建新的索引。 2.1. 删除索引 如果你需要删除现有的索引，可以使用 DROP INDEX 命令。删除索引时，需要指定索引所在的表。\n语法：\nsql 复制代码\n1 DROP INDEX index_name ON table_name; 示例：删除 xinli_user 表中的 idx_user_id 索引： sql 复制代码\n1 DROP INDEX idx_user_id ON xinli_user; 2.2. 重建索引 如果你需要修改索引的结构或列，可以先删除现有索引，再创建新的索引。例如，假设你希望将复合索引从 (column1, column2) 改为 (column2, column1)，可以按照以下步骤操作：\n删除旧索引：\nsql 复制代码\n1 DROP INDEX idx_old_index ON table_name; 创建新索引：\nsql 复制代码\n1 CREATE INDEX idx_new_index ON table_name(column2, column1); 2.3. 索引修改实例 假设你有一个索引 idx_user_email，原本创建的是 (user_id, email)，但是你想要修改为 (email, user_id) 的复合索引。你需要先删除原来的索引，再创建新的索引：\nsql 复制代码 \u0026ndash; 删除旧的索引 DROP INDEX idx_user_email ON xinli_user;\n\u0026ndash; 创建新的索引 CREATE INDEX idx_email_user ON xinli_user(email, user_id); 3. 查看现有索引 在修改或删除索引之前，查看现有索引是很重要的。你可以使用 SHOW INDEX 命令查看一个表的所有索引。\n语法： sql 复制代码\n1 SHOW INDEX FROM table_name; 示例： sql 复制代码\n1 SHOW INDEX FROM xinli_user; 优化索引使用 选择性：高选择性的列（有很多不同值的列）适合创建索引。 避免冗余索引：不要为已经存在的复合索引中的前缀列创建单列索引。 复合索引的顺序：复合索引的列顺序应根据查询条件中的使用频率来决定。 避免过多索引：索引会增加 INSERT、UPDATE 和 DELETE 操作的成本，因此要平衡查询优化与写入性能。 查看索引的执行计划 在添加或修改索引后，可以使用 EXPLAIN 命令查看查询执行计划，确保新的索引被正确使用。例如： sql 复制代码\n1 EXPLAIN SELECT * FROM xinli_user WHERE user_id = 123; 执行计划将显示是否使用了你创建的索引。\n总结 使用 CREATE INDEX 创建新索引，适用于单列索引、复合索引、唯一索引等。 使用 DROP INDEX 删除现有索引，修改索引时通常需要先删除旧索引再创建新索引。 使用 SHOW INDEX 查看现有索引。 定期优化索引，避免冗余索引和过多的索引，以平衡查询性能与写入性能。 通过这些步骤，你可以有效地为 MySQL 表添加、修改和管理索引，从而优化查询性能。\n分区分表得情况讲解 目前项目没有用到 如何选择分区和分表策略？ 选择分区： 当数据量大，但仍然希望保持表结构简单时，使用 分区。分区不需要拆分表，它将表物理划分为多个分区，查询时，MySQL 会自动决定扫描哪些分区，提升查询性能。 分区适用于那些按时间或范围进行查询的表。\n选择分表： 当数据量极大，单个表的写入性能变得非常低，或者当数据库的性能需要水平扩展时，使用 分表。 分表适合需要分散存储的数据，通常通过哈希分表或基于某些字段的范围分表。\n总结 分区和分表的选择和使用，通常取决于以下几个因素：\n数据量：当数据量非常大，单表查询和写入变得低效时，可以考虑分区或分表。 查询模式：如果查询经常涉及某些字段（如时间、ID 范围等），分区可以加速这些查询。 写入压力：高频的写入操作可能会使单表性能下降，分表可以减少写入压力。 业务需求：某些业务场景（如多租户、历史数据归档等）要求将数据分开存储。 扩展性需求：当需要扩展数据库的存储和计算能力时，分表是一个常用策略。 通过合理的分区和分表策略，可以显著提高数据库的性能和可维护性。 调整MySQL服务器参数，如增加缓存区大小、减少线程数等，以达到更好的性能优化效果。 升级数据库版本，选择更高效的数据库版本可以对查询性能产生显著影响。 ","date":"2024-11-25T15:24:50+08:00","permalink":"https://wangyipeng110.github.io/dev/p/mysql%E4%BC%98%E5%8C%96%E5%AD%A6%E4%B9%A0/","title":"mysql优化学习"},{"content":"问题来源 数据库是where in查询 控制器 1 2 3 4 public function aaa(){ $id = input(\u0026#39;ids\u0026#39;); //获取对应的获取的id 查in keshi_id 对饮数据库字段 $wheres[] = [\u0026#39;EXP\u0026#39;, Db::raw(\u0026#34;FIND_IN_SET($id,keshi_id)\u0026#34;)]; } 问题来源 where 查询经纬度距离计算距离 控制器 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 // 当前坐标 // $latitude = \u0026#39;34.7803771\u0026#39;;//纬度 // $longitude = \u0026#39;113.6582208\u0026#39;; //经度 $longitude = $this-\u0026gt;request-\u0026gt;post(\u0026#39;longitude\u0026#39;); $latitude = $this-\u0026gt;request-\u0026gt;post(\u0026#39;latitude\u0026#39;); $order = $this-\u0026gt;request-\u0026gt;post(\u0026#39;order\u0026#39;); $type = $this-\u0026gt;request-\u0026gt;post(\u0026#39;type\u0026#39;); $title =$this-\u0026gt;request-\u0026gt;post(\u0026#39;title\u0026#39;); $city_id = $this-\u0026gt;request-\u0026gt;post(\u0026#39;store_quan\u0026#39;); $store_csfl2 = $this-\u0026gt;request-\u0026gt;post(\u0026#39;store_csfl\u0026#39;); if ($order == 1) { //有近到远 $order = \u0026#39;distance asc,store_id desc\u0026#39;; } elseif ($order == 2) { $order = \u0026#39;distance desc,store_id asc\u0026#39;; }else{ $order = \u0026#39;distance asc,store_id desc\u0026#39;; } $where = []; if (!empty($type)) { //类型条件 $where[\u0026#39;store_hanglist\u0026#39;] = [\u0026#39;=\u0026#39;, $type]; } if(!empty($city_id)){ $where[\u0026#39;store_quan\u0026#39;] = [\u0026#39;=\u0026#39;, $city_id]; } if(!empty($title)){ $where[\u0026#39;store_name\u0026#39;] = [\u0026#39;like\u0026#39;, \u0026#39;%\u0026#39;.$title.\u0026#39;%\u0026#39;]; } if(!empty($store_csfl2)){ $where[\u0026#39;store_csfl2\u0026#39;] = [\u0026#39;=\u0026#39;, $store_csfl2]; } $earthRadius = 6371; //北半球的 $radius = 10; //范围 // 从\u0026#39;hang\u0026#39;模型中获取指定字段的数据 $list = $this-\u0026gt;store-\u0026gt;field(\u0026#39;store_id, store_name, store_image, store_lat, store_lnt, store_shijian, store_hanglist, store_titles, store_jianjie, store_address, (\u0026#39;.$earthRadius.\u0026#39; * ACOS(COS(RADIANS(\u0026#39;.$latitude.\u0026#39;)) * COS(RADIANS(store_lat)) * COS(RADIANS(store_lnt) - RADIANS(\u0026#39;.$longitude.\u0026#39;)) + SIN(RADIANS(\u0026#39;.$latitude.\u0026#39;)) * SIN(RADIANS(store_lat)))) AS distance \u0026#39;)-\u0026gt;where($where) -\u0026gt;having(\u0026#39;distance \u0026lt;= \u0026#39;.$radius.\u0026#39;\u0026#39;) -\u0026gt;order($order)-\u0026gt;select(); foreach ($list as $k =\u0026gt; \u0026amp;$v) { $dist = $this-\u0026gt;get_distance($longitude, $latitude, $v[\u0026#39;store_lnt\u0026#39;], $v[\u0026#39;store_lat\u0026#39;]); $v[\u0026#39;m\u0026#39;] = $dist; $aa = $this-\u0026gt;hang-\u0026gt;where(\u0026#39;hang_id\u0026#39;,$v[\u0026#39;store_hanglist\u0026#39;])-\u0026gt;find(); $v[\u0026#39;list_hang_text\u0026#39;] =$aa[\u0026#39;hang_name\u0026#39;]; } // 使用自定义的success方法将获取到的数据以JSON格式返回 $this-\u0026gt;success(\u0026#39;\u0026#39;,$list); } // 计算两位置的距离 上面方法调用 function get_distance($lng1, $lat1, $lng2, $lat2, $lang = \u0026#39;en\u0026#39;) { // 地球的近似半径(单位:米) $earthRadius = 6367000; // 将这些度数转换为弧度以使用公式 $lat1 = ($lat1 * pi()) / 180; $lng1 = ($lng1 * pi()) / 180; $lat2 = ($lat2 * pi()) / 180; $lng2 = ($lng2 * pi()) / 180; // 使用 Haversine 公示计算距离 // http://en.wikipedia.org/wiki/Haversine_formula $calcLongitude = $lng2 - $lng1; $calcLatitude = $lat2 - $lat1; $stepOne = pow(sin($calcLatitude / 2), 2) + cos($lat1) * cos($lat2) * pow(sin($calcLongitude / 2), 2); $stepTwo = 2 * asin(min(1, sqrt($stepOne))); // 两个经纬度坐标的距离(单位: 米) $calculatedDistance = round($earthRadius * $stepTwo); // 距离单位 $language = [\u0026#39;en\u0026#39; =\u0026gt; [\u0026#39;m\u0026#39; =\u0026gt; \u0026#39;m\u0026#39;, \u0026#39;km\u0026#39; =\u0026gt; \u0026#39;km\u0026#39;], \u0026#39;cn\u0026#39; =\u0026gt; [\u0026#39;m\u0026#39; =\u0026gt; \u0026#39;米\u0026#39;, \u0026#39;km\u0026#39; =\u0026gt; \u0026#39;公里\u0026#39;],]; if (!isset($language[$lang])) throw new Exception(\u0026#39;不支持的语言:\u0026#39; . $lang); foreach ($language[$lang] as $key =\u0026gt; $value) $$key = $value; // 两个坐标间的距离,单位:米 $distance = round($calculatedDistance); // 距离单位转换:超出 1000m 时单位转为km if ($distance \u0026lt; 1000) { $distance .= $m; } else { $distances = number_format($distance / 1000, 2) . $km; $distance = str_replace(\u0026#34;,\u0026#34;, \u0026#34;\u0026#34;, $distances); } return $distance; // 返回单位转换后的距离 } ","date":"2024-11-25T15:24:50+08:00","permalink":"https://wangyipeng110.github.io/dev/p/mysql%E6%9F%A5%E8%AF%A2%E6%89%80%E6%9C%89%E6%9C%89%E5%85%B3%E6%9F%A5%E8%AF%A2%E7%9A%84/","title":"mysql查询所有有关查询的"},{"content":"","date":"2024-11-25T15:24:50+08:00","permalink":"https://wangyipeng110.github.io/dev/p/vue%E5%AD%A6%E4%B9%A0/","title":"vue学习"}]