[{"content":"问题来源 项目需要用到对应的google地图获取经纬度\n接口地址: 点这里直接飞 添加页面 html 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 \u0026lt;div class=\u0026#34;form-group\u0026#34;\u0026gt; \u0026lt;label class=\u0026#34;control-label col-xs-12 col-sm-2\u0026#34;\u0026gt;{:__(\u0026#39;Store_address\u0026#39;)}:\u0026lt;/label\u0026gt; \u0026lt;div class=\u0026#34;col-xs-12 col-sm-8\u0026#34;\u0026gt; \u0026lt;input id=\u0026#34;c-store_address\u0026#34; class=\u0026#34;form-control\u0026#34; name=\u0026#34;row[store_address]\u0026#34; type=\u0026#34;text\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;input type=\u0026#34;button\u0026#34; id=\u0026#34;addressh\u0026#34; value=\u0026#34;获取地址坐标\u0026#34; \u0026gt; //注意修改的时候input 框里面添加对应的地址 value=\u0026#34;{$row.store_titles|htmlentities}\u0026#34; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;form-group\u0026#34;\u0026gt; \u0026lt;label class=\u0026#34;control-label col-xs-2 col-sm-2\u0026#34;\u0026gt;{:__(\u0026#39;Store_lat\u0026#39;)}:\u0026lt;/label\u0026gt; \u0026lt;div class=\u0026#34;col-xs-2 col-sm-2\u0026#34;\u0026gt; \u0026lt;input id=\u0026#34;c-pointlat\u0026#34; class=\u0026#34;form-control\u0026#34; name=\u0026#34;row[store_lat]\u0026#34; type=\u0026#34;text\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;label class=\u0026#34;control-label col-xs-2 col-sm-2\u0026#34;\u0026gt;{:__(\u0026#39;Store_lnt\u0026#39;)}:\u0026lt;/label\u0026gt; \u0026lt;div class=\u0026#34;col-xs-2 col-sm-2\u0026#34;\u0026gt; \u0026lt;input id=\u0026#34;c-pointlng\u0026#34; class=\u0026#34;form-control\u0026#34; name=\u0026#34;row[store_lnt]\u0026#34; type=\u0026#34;text\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; 添加页面js渲染 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 \u0026lt;script type=\u0026#34;text/javascript\u0026#34;\u0026gt; // 点击按钮，获取input里面的内容 // 1.找到按钮 找到input 2.点击事件 3.事件绑定 var oBtn = document.getElementById(\u0026#39;addressh\u0026#39;) var oIpt = document.getElementById(\u0026#39;c-store_address\u0026#39;) oBtn.onclick = function(){ // 弹出input的内容 alert(oIpt.value) address = $(\u0026#39;#c-store_address\u0026#39;).val(); $(document).ready(function() { // 发送 GET 请求 $.ajax({ url: \u0026#34;store/tankuang\u0026#34;, type: \u0026#39;GET\u0026#39;, // 请求方式 data: { \u0026#39;address\u0026#39;:address }, dataType: \u0026#39;json\u0026#39;, // 期望的响应数据类型 success: function(response) { // 在请求成功时调用的函数 console.log(response); // 打印响应数据 if (response.code == 1){ console.log( response.data.lat); console.log( response.data.lng); $(\u0026#39;#c-pointlat\u0026#39;).val(response.data.lat); $(\u0026#39;#c-pointlng\u0026#39;).val(response.data.lng); }else{ alert(response.msg +\u0026#34;错误码：\u0026#34;+response.data); } }, error: function(xhr, status, error) { // 在请求失败时调用的函数 console.error(\u0026#39;请求失败: \u0026#39; + status + \u0026#39;, 错误信息: \u0026#39; + error); } }); }); // oIpt.value = \u0026#34;改变了内容\u0026#34; } \u0026lt;/script\u0026gt; 控制器 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 public function tankuang(){ $address = $this -\u0026gt;request-\u0026gt;get(\u0026#39;address\u0026#39;); //传过来对应的地址 $geocode = $this-\u0026gt;geocode($address); if ($geocode[\u0026#39;status\u0026#39;] == \u0026#39;OK\u0026#39;) { $lat = $geocode[\u0026#39;results\u0026#39;][0][\u0026#39;geometry\u0026#39;][\u0026#39;location\u0026#39;][\u0026#39;lat\u0026#39;]; $lng = $geocode[\u0026#39;results\u0026#39;][0][\u0026#39;geometry\u0026#39;][\u0026#39;location\u0026#39;][\u0026#39;lng\u0026#39;]; $data = [ \u0026#39;lat\u0026#39; =\u0026gt;$lat, \u0026#39;lng\u0026#39;=\u0026gt;$lng ]; $this-\u0026gt;success(\u0026#39;\u0026#39;,\u0026#39;\u0026#39;,$data); } else { $this-\u0026gt;error(\u0026#39;坐标获取失败请选择正确得地址\u0026#39;,\u0026#39;\u0026#39;,$geocode[\u0026#39;status\u0026#39;]); } } public function geocode($address) { $apiKey = \u0026#39;你的key\u0026#39;; // 替换为你的Google Maps API密钥 $url = \u0026#39;https://maps.googleapis.com/maps/api/geocode/json?address=\u0026#39; . urlencode($address) . \u0026#39;\u0026amp;key=\u0026#39; . $apiKey; // 使用cURL $ch = curl_init(); curl_setopt($ch, CURLOPT_URL, $url); curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); $response = curl_exec($ch); curl_close($ch); // 使用file_get_contents // $response = file_get_contents($url); return json_decode($response, true); } 以上完美的解决了代码但是注意复制的时候要看好对应的控制器 ","date":"2024-11-25T15:24:50+08:00","permalink":"https://wangyipeng110.github.io/dev/p/fastadmin%E5%90%8E%E5%8F%B0%E8%B0%83%E7%94%A8google%E6%8E%A5%E5%8F%A3%E8%8E%B7%E5%8F%96%E7%BB%8F%E7%BA%AC%E5%BA%A6/","title":"Fastadmin后台调用google接口获取经纬度"},{"content":"问题来源 就是有时候总是在index.js 得时候忘记一些功能\n头部的一些样式开关 1 2 3 4 5 6 7 8 9 10 11 12 13 14 table.bootstrapTable({ search: false, //隐藏搜索 showToggle: false, showColumns: false, dblClickToEdit: false, fixedColumns: true, fixedRightNumber: 1, showSearch: false, //隐藏多 搜索 commonSearch: false, visible: false, showExport: false, //隐藏导出 searchFormVisible: false }) 搜索的时候找寻对应的字段 这个默认是id 但是我们数据库一般都是 goods_id 所以就用到了在对应的控制器 1 protected $searchFields = \u0026#39;goods_id,country_name\u0026#39;; //搜索对应的字段 加这个 对于排序一般都是多个条件进行的排序 1 2 3 4 5 table.bootstrapTable({ url: $.fn.bootstrapTable.defaults.extend.index_url, pk: \u0026#39;kefu_id\u0026#39;, sortName: \u0026#39;kefu_id\u0026#39; //排序的话就在这里加对应的字段就可以了 例如: kefu_id desc,kefu_creatime asc 如何在操作页面添加对应的按钮呢 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 { field: \u0026#39;operate\u0026#39;, title: __(\u0026#39;Operate\u0026#39;), table: table, events: Table.api.events.operate, buttons: [ { name: \u0026#34;enrolluser\u0026#34;, text: \u0026#34;库存列表\u0026#34;,//按钮名称 classname: \u0026#39;btn btn-xs btn-primary btn-dialog\u0026#39;, // classname: \u0026#39;btn b // tn-xs btn-success btn-magic btn-dialog\u0026#39;, icon: \u0026#39;fa fa-magic\u0026#39;, url: \u0026#39;ku/index?ids={goods_id}\u0026#39;,//指向控制器对应方法 visible: function (row) { //返回true时按钮显示,返回false隐藏 return true;} } ], formatter: Table.api.formatter.operate } 后端关联表表获取的值进行对应的搜索 1 2 3 4 5 6 7 8 9 10 var table = $(\u0026#34;#table\u0026#34;); table.on(\u0026#39;post-common-search.bs.table\u0026#39;, function (event, table) { var form = $(\u0026#34;form\u0026#34;, table.$commonsearch); $(\u0026#34;input[name=\u0026#39;types.goods_type_name\u0026#39;]\u0026#34;, form).addClass(\u0026#34;selectpage\u0026#34;).data(\u0026#34;source\u0026#34;, \u0026#34;Type/index\u0026#34;).data(\u0026#34;primaryKey\u0026#34;, \u0026#34;goods_type_name\u0026#34;).data(\u0026#34;field\u0026#34;, \u0026#34;goods_type_name\u0026#34;).data(\u0026#34;orderBy\u0026#34;, \u0026#34;goods_quanzhong desc\u0026#34;).data(\u0026#34;pageSize\u0026#34;,5); Form.events.cxselect(form); Form.events.selectpage(form); }); 对应的在table 标里面的值 columns 里面 搜索对应的 types.goods_type_name 记住 operate 是打开搜索的开关 1 2 3 4 5 6 7 8 columns: [ [ {checkbox: true}, {field: \u0026#39;goods_id\u0026#39;, title: __(\u0026#39;Goods_id\u0026#39;),operate: false,}, {field: \u0026#39;types.goods_type_name\u0026#39;, title: __(\u0026#39;Goods_type\u0026#39;),operate: \u0026#39;LIKE %...%\u0026#39;, placeholder: \u0026#39;模糊搜索，*表示任意字符\u0026#39;}, {field: \u0026#39;goods_name\u0026#39;, title: __(\u0026#39;Goods_name\u0026#39;), operate: \u0026#39;LIKE\u0026#39;, table: table, class: \u0026#39;autocontent\u0026#39;, formatter: Table.api.formatter.content}, ] ] 对应的在 页面条件上面加小三角如图 1 {field: \u0026#39;conint\u0026#39;, title: __(\u0026#39;收藏量\u0026#39;),sortable: true}, //注意这个 sortable 打开即可 添加对应的开关的时候 1 2 {field: \u0026#39;ishotshell\u0026#39;, title: __(\u0026#39;热卖优品\u0026#39;), searchList: {\u0026#34;1\u0026#34;: __(\u0026#39;Yes\u0026#39;), \u0026#34;0\u0026#34;: __(\u0026#39;No\u0026#39;)}, formatter: Table.api.formatter.toggle}, //toggle这个就是开关按钮 会自动调取muit 方法可以自行f12 查看 在对应的控制器里面 1 2 3 4 5 6 7 8 9 10 */ protected $model = null; protected $multiFields=\u0026#34;goods_id,ishotshell\u0026#34;; //加上渲染的值 public function _initialize() { parent::_initialize(); $this-\u0026gt;model = new \\app\\admin\\model\\Selfgoods; } 上面就是一些我了解的东西 ","date":"2024-11-25T15:24:50+08:00","permalink":"https://wangyipeng110.github.io/dev/p/fastadmin%E6%A0%B7%E5%BC%8Findex.js%E9%A1%B5%E9%9D%A2/","title":"Fastadmin样式index.js页面"},{"content":"问题来源 开发中遇到在添加修改页面的时候多级菜单的分类添加\n添加（修改）页面 1 2 3 4 5 6 7 8 9 10 11 12 13 \u0026lt;div class=\u0026#34;form-group\u0026#34;\u0026gt; \u0026lt;label class=\u0026#34;control-label col-xs-12 col-sm-2\u0026#34;\u0026gt;{:__(\u0026#39;商品类别\u0026#39;)}:\u0026lt;/label\u0026gt; \u0026lt;div class=\u0026#34;col-xs-12 col-sm-8\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;form-inline\u0026#34; data-toggle=\u0026#34;cxselect\u0026#34; data-selects=\u0026#34;first,second\u0026#34;\u0026gt; \u0026lt;select class=\u0026#34;first form-control\u0026#34; name=\u0026#34;row[store_city]\u0026#34; data-url=\u0026#34;city/qdtype1\u0026#34; \u0026gt; \u0026lt;option value=\u0026#34;{$row.store_city|htmlentities}\u0026#34; selected=\u0026#34;\u0026#34;\u0026gt;\u0026lt;/option\u0026gt; \u0026lt;/select\u0026gt; \u0026lt;select class=\u0026#34;second form-control\u0026#34; name=\u0026#34;row[store_quan]\u0026#34; data-url=\u0026#34;city/qdtype2\u0026#34; data-query-name=\u0026#34;pid\u0026#34;\u0026gt; \u0026lt;option value=\u0026#34;{$row.store_quan|htmlentities}\u0026#34; selected=\u0026#34;\u0026#34;\u0026gt;\u0026lt;/option\u0026gt; \u0026lt;/select\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; 上面图中 data-url=\u0026quot;\u0026quot; 跳转对应的控制器方法获取对应的值 data-query-name=\u0026ldquo;pid\u0026rdquo; 传值获取 pid 为值 控制器 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 public function qdtype1(){ $list= $this-\u0026gt;model-\u0026gt;where(\u0026#39;remark\u0026#39;,1)-\u0026gt;select(); foreach ($list as $k=\u0026gt;$v){ $v[\u0026#39;name\u0026#39;] = $v[\u0026#39;title\u0026#39;]; $v[\u0026#39;value\u0026#39;] =$v[\u0026#39;id\u0026#39;]; } $this-\u0026gt;success(\u0026#39;\u0026#39;,\u0026#39;\u0026#39;,$list); } public function qdtype2(){ $pid = $this -\u0026gt;request-\u0026gt;get(\u0026#39;pid\u0026#39;); $list= $this-\u0026gt;model-\u0026gt;where(\u0026#39;remark\u0026#39;,2)-\u0026gt;where(\u0026#39;pid\u0026#39;,$pid)-\u0026gt;select(); foreach ($list as $k=\u0026gt;$v){ $v[\u0026#39;name\u0026#39;] = $v[\u0026#39;title\u0026#39;]; $v[\u0026#39;value\u0026#39;] =$v[\u0026#39;id\u0026#39;]; } $this-\u0026gt;success(\u0026#39;\u0026#39;,\u0026#39;\u0026#39;,$list); } 对应的方法获取值渲染 name 是渲染的值 value 是渲染的id ","date":"2024-11-25T15:24:50+08:00","permalink":"https://wangyipeng110.github.io/dev/p/fastadmin%E6%B7%BB%E5%8A%A0%E8%8E%B7%E5%8F%96%E5%A4%9A%E7%BA%A7%E5%88%86%E7%B1%BB/","title":"Fastadmin添加获取多级分类"},{"content":"问题来源 今天开发添加页面的时候 获取到别的控制器进行的页面渲染到我当前的控制器的按钮列表里面 但是导入的时候获取不到对应的数据的ids\n1 2 3 4 5 6 7 8 9 10 Table.api.init({ extend: { index_url: \u0026#39;ku/index\u0026#39; + location.search + $(\u0026#34;#ids\u0026#34;).html(), add_url: \u0026#39;ku/add\u0026#39;, edit_url: \u0026#39;ku/edit\u0026#39;, del_url: \u0026#39;ku/del\u0026#39;, multi_url: \u0026#39;ku/multi\u0026#39;, import_url: \u0026#39;ku/import/ids/\u0026#39;+ $(\u0026#34;#ids\u0026#34;).html(), //在这里就可以获取到对应的ids了 table: \u0026#39;ku\u0026#39;, }}) 控制器 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 public function import(){ $id = input(\u0026#39;ids\u0026#39;); //获取对应的ids $file = $this-\u0026gt;request-\u0026gt;request(\u0026#39;file\u0026#39;); //\u0026#39;file\u0026#39;为文件字段名 $data = $this-\u0026gt;readFile($file); //下面代码就是导入的哦 $rs = []; foreach ($data as \u0026amp;$row) { $rs[] = [ \u0026#39;ku_name\u0026#39; =\u0026gt; $row[\u0026#39;123\u0026#39;], \u0026#39;ku_ma\u0026#39; =\u0026gt; $row[\u0026#39;456 \u0026#39;ku_goods\u0026#39; =\u0026gt; $id, \u0026#39;ku_static\u0026#39;=\u0026gt;0 ]; } $this-\u0026gt;model-\u0026gt;saveAll($rs); $this-\u0026gt;success(\u0026#39;导入成功\u0026#39;); } 调用方法 这个导入自定义导入的因为这自带的导入数据处理麻烦就用的这个 代码放在 application/admin/library/traits/Backend.php最下面就好了 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 protected function readFile($file){ if (!$file) { $this-\u0026gt;error(__(\u0026#39;Parameter %s can not be empty\u0026#39;, \u0026#39;file\u0026#39;)); } $filePath = ROOT_PATH . DS . \u0026#39;public\u0026#39; . DS . $file; if (!is_file($filePath)) { $this-\u0026gt;error(__(\u0026#39;No results were found\u0026#39;)); } //实例化reader $ext = pathinfo($filePath, PATHINFO_EXTENSION); if (!in_array($ext, [\u0026#39;csv\u0026#39;, \u0026#39;xls\u0026#39;, \u0026#39;xlsx\u0026#39;])) { $this-\u0026gt;error(__(\u0026#39;Unknown data format\u0026#39;)); } if ($ext === \u0026#39;csv\u0026#39;) { $file = fopen($filePath, \u0026#39;r\u0026#39;); $filePath = tempnam(sys_get_temp_dir(), \u0026#39;import_csv\u0026#39;); $fp = fopen($filePath, \u0026#34;w\u0026#34;); $n = 0; while ($line = fgets($file)) { $line = rtrim($line, \u0026#34;\\n\\r\\0\u0026#34;); $encoding = mb_detect_encoding($line, [\u0026#39;utf-8\u0026#39;, \u0026#39;gbk\u0026#39;, \u0026#39;latin1\u0026#39;, \u0026#39;big5\u0026#39;]); if ($encoding != \u0026#39;utf-8\u0026#39;) { $line = mb_convert_encoding($line, \u0026#39;utf-8\u0026#39;, $encoding); } if ($n == 0 || preg_match(\u0026#39;/^\u0026#34;.*\u0026#34;$/\u0026#39;, $line)) { fwrite($fp, $line . \u0026#34;\\n\u0026#34;); } else { fwrite($fp, \u0026#39;\u0026#34;\u0026#39; . str_replace([\u0026#39;\u0026#34;\u0026#39;, \u0026#39;,\u0026#39;], [\u0026#39;\u0026#34;\u0026#34;\u0026#39;, \u0026#39;\u0026#34;,\u0026#34;\u0026#39;], $line) . \u0026#34;\\\u0026#34;\\n\u0026#34;); } $n++; } fclose($file) || fclose($fp); $reader = new Csv(); } elseif ($ext === \u0026#39;xls\u0026#39;) { $reader = new Xls(); } else { $reader = new Xlsx(); } //加载文件 try { if (!$PHPExcel = $reader-\u0026gt;load($filePath)) { $this-\u0026gt;error(__(\u0026#39;Unknown data format\u0026#39;)); } $currentSheet = $PHPExcel-\u0026gt;getSheet(0); //读取文件中的第一个工作表 $allColumn = $currentSheet-\u0026gt;getHighestDataColumn(); //取得最大的列号 $allRow = $currentSheet-\u0026gt;getHighestRow(); //取得一共有多少行 $maxColumnNumber = Coordinate::columnIndexFromString($allColumn); //读取第一行字段名 $fields = []; for ($currentRow = 1; $currentRow \u0026lt;= 1; $currentRow++) { for ($currentColumn = 1; $currentColumn \u0026lt;= $maxColumnNumber; $currentColumn++) { $val = $currentSheet-\u0026gt;getCellByColumnAndRow($currentColumn, $currentRow)-\u0026gt;getValue(); $fields[] = $val; } } //读取行数据 $row = []; for ($currentRow = 2; $currentRow \u0026lt;= $allRow; $currentRow++) { $values = []; for ($currentColumn = 1; $currentColumn \u0026lt;= $maxColumnNumber; $currentColumn++) { $val = $currentSheet-\u0026gt;getCellByColumnAndRow($currentColumn, $currentRow)-\u0026gt;getValue(); $values[] = is_null($val) ? \u0026#39;\u0026#39; : $val; } $row[] = array_combine($fields, $values); } } catch (Exception $exception) { $this-\u0026gt;error($exception-\u0026gt;getMessage()); } if (!$row) { $this-\u0026gt;error(__(\u0026#39;No rows were updated\u0026#39;)); } return $row; } 这样就完成了 在当前控制器调用模块到 别的控制器但是获取当前控制器ids 的操作了 ","date":"2024-11-25T15:24:50+08:00","permalink":"https://wangyipeng110.github.io/dev/p/fastadmin%E9%A1%B5%E9%9D%A2%E8%B7%B3%E8%BD%AC%E5%88%B0%E5%88%AB%E7%9A%84%E6%8E%A7%E5%88%B6%E5%99%A8%E8%8E%B7%E5%8F%96%E5%BD%93%E5%89%8D%E6%95%B0%E6%8D%AE%E7%9A%84ids/","title":"Fastadmin页面跳转到别的控制器获取当前数据的ids"},{"content":"","date":"2024-11-25T15:24:50+08:00","permalink":"https://wangyipeng110.github.io/dev/p/hugo%E6%90%AD%E5%BB%BA/","title":"hugo搭建"},{"content":"问题来源 数据库是where in查询 控制器 1 2 3 4 public function aaa(){ $id = input(\u0026#39;ids\u0026#39;); //获取对应的获取的id 查in keshi_id 对饮数据库字段 $wheres[] = [\u0026#39;EXP\u0026#39;, Db::raw(\u0026#34;FIND_IN_SET($id,keshi_id)\u0026#34;)]; } 问题来源 where 查询经纬度距离计算距离 控制器 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 // 当前坐标 // $latitude = \u0026#39;34.7803771\u0026#39;;//纬度 // $longitude = \u0026#39;113.6582208\u0026#39;; //经度 $longitude = $this-\u0026gt;request-\u0026gt;post(\u0026#39;longitude\u0026#39;); $latitude = $this-\u0026gt;request-\u0026gt;post(\u0026#39;latitude\u0026#39;); $order = $this-\u0026gt;request-\u0026gt;post(\u0026#39;order\u0026#39;); $type = $this-\u0026gt;request-\u0026gt;post(\u0026#39;type\u0026#39;); $title =$this-\u0026gt;request-\u0026gt;post(\u0026#39;title\u0026#39;); $city_id = $this-\u0026gt;request-\u0026gt;post(\u0026#39;store_quan\u0026#39;); $store_csfl2 = $this-\u0026gt;request-\u0026gt;post(\u0026#39;store_csfl\u0026#39;); if ($order == 1) { //有近到远 $order = \u0026#39;distance asc,store_id desc\u0026#39;; } elseif ($order == 2) { $order = \u0026#39;distance desc,store_id asc\u0026#39;; }else{ $order = \u0026#39;distance asc,store_id desc\u0026#39;; } $where = []; if (!empty($type)) { //类型条件 $where[\u0026#39;store_hanglist\u0026#39;] = [\u0026#39;=\u0026#39;, $type]; } if(!empty($city_id)){ $where[\u0026#39;store_quan\u0026#39;] = [\u0026#39;=\u0026#39;, $city_id]; } if(!empty($title)){ $where[\u0026#39;store_name\u0026#39;] = [\u0026#39;like\u0026#39;, \u0026#39;%\u0026#39;.$title.\u0026#39;%\u0026#39;]; } if(!empty($store_csfl2)){ $where[\u0026#39;store_csfl2\u0026#39;] = [\u0026#39;=\u0026#39;, $store_csfl2]; } $earthRadius = 6371; //北半球的 $radius = 10; //范围 // 从\u0026#39;hang\u0026#39;模型中获取指定字段的数据 $list = $this-\u0026gt;store-\u0026gt;field(\u0026#39;store_id, store_name, store_image, store_lat, store_lnt, store_shijian, store_hanglist, store_titles, store_jianjie, store_address, (\u0026#39;.$earthRadius.\u0026#39; * ACOS(COS(RADIANS(\u0026#39;.$latitude.\u0026#39;)) * COS(RADIANS(store_lat)) * COS(RADIANS(store_lnt) - RADIANS(\u0026#39;.$longitude.\u0026#39;)) + SIN(RADIANS(\u0026#39;.$latitude.\u0026#39;)) * SIN(RADIANS(store_lat)))) AS distance \u0026#39;)-\u0026gt;where($where) -\u0026gt;having(\u0026#39;distance \u0026lt;= \u0026#39;.$radius.\u0026#39;\u0026#39;) -\u0026gt;order($order)-\u0026gt;select(); foreach ($list as $k =\u0026gt; \u0026amp;$v) { $dist = $this-\u0026gt;get_distance($longitude, $latitude, $v[\u0026#39;store_lnt\u0026#39;], $v[\u0026#39;store_lat\u0026#39;]); $v[\u0026#39;m\u0026#39;] = $dist; $aa = $this-\u0026gt;hang-\u0026gt;where(\u0026#39;hang_id\u0026#39;,$v[\u0026#39;store_hanglist\u0026#39;])-\u0026gt;find(); $v[\u0026#39;list_hang_text\u0026#39;] =$aa[\u0026#39;hang_name\u0026#39;]; } // 使用自定义的success方法将获取到的数据以JSON格式返回 $this-\u0026gt;success(\u0026#39;\u0026#39;,$list); } // 计算两位置的距离 上面方法调用 function get_distance($lng1, $lat1, $lng2, $lat2, $lang = \u0026#39;en\u0026#39;) { // 地球的近似半径(单位:米) $earthRadius = 6367000; // 将这些度数转换为弧度以使用公式 $lat1 = ($lat1 * pi()) / 180; $lng1 = ($lng1 * pi()) / 180; $lat2 = ($lat2 * pi()) / 180; $lng2 = ($lng2 * pi()) / 180; // 使用 Haversine 公示计算距离 // http://en.wikipedia.org/wiki/Haversine_formula $calcLongitude = $lng2 - $lng1; $calcLatitude = $lat2 - $lat1; $stepOne = pow(sin($calcLatitude / 2), 2) + cos($lat1) * cos($lat2) * pow(sin($calcLongitude / 2), 2); $stepTwo = 2 * asin(min(1, sqrt($stepOne))); // 两个经纬度坐标的距离(单位: 米) $calculatedDistance = round($earthRadius * $stepTwo); // 距离单位 $language = [\u0026#39;en\u0026#39; =\u0026gt; [\u0026#39;m\u0026#39; =\u0026gt; \u0026#39;m\u0026#39;, \u0026#39;km\u0026#39; =\u0026gt; \u0026#39;km\u0026#39;], \u0026#39;cn\u0026#39; =\u0026gt; [\u0026#39;m\u0026#39; =\u0026gt; \u0026#39;米\u0026#39;, \u0026#39;km\u0026#39; =\u0026gt; \u0026#39;公里\u0026#39;],]; if (!isset($language[$lang])) throw new Exception(\u0026#39;不支持的语言:\u0026#39; . $lang); foreach ($language[$lang] as $key =\u0026gt; $value) $$key = $value; // 两个坐标间的距离,单位:米 $distance = round($calculatedDistance); // 距离单位转换:超出 1000m 时单位转为km if ($distance \u0026lt; 1000) { $distance .= $m; } else { $distances = number_format($distance / 1000, 2) . $km; $distance = str_replace(\u0026#34;,\u0026#34;, \u0026#34;\u0026#34;, $distances); } return $distance; // 返回单位转换后的距离 } ","date":"2024-11-25T15:24:50+08:00","permalink":"https://wangyipeng110.github.io/dev/p/mysql%E6%9F%A5%E8%AF%A2%E6%89%80%E6%9C%89%E6%9C%89%E5%85%B3%E6%9F%A5%E8%AF%A2%E7%9A%84/","title":"mysql查询所有有关查询的"}]